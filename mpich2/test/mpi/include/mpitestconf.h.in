/* include/mpitestconf.h.in.  Generated from configure.ac by autoheader.  */

/*
 * Copyright (C) by Argonne National Laboratory
 *     See COPYRIGHT in top-level directory
 */
#ifndef MPITESTCONF_H_INCLUDED
#define MPITESTCONF_H_INCLUDED


/* Fortran names are lowercase with no trailing underscore */
#undef F77_NAME_LOWER

/* Fortran names are lowercase with two trailing underscores */
#undef F77_NAME_LOWER_2USCORE

/* Fortran names are lowercase with two trailing underscores in stdcall */
#undef F77_NAME_LOWER_2USCORE_STDCALL

/* Fortran names are lowercase with no trailing underscore in stdcall */
#undef F77_NAME_LOWER_STDCALL

/* Fortran names are lowercase with one trailing underscore */
#undef F77_NAME_LOWER_USCORE

/* Fortran names are lowercase with one trailing underscore in stdcall */
#undef F77_NAME_LOWER_USCORE_STDCALL

/* Fortran names preserve the original case */
#undef F77_NAME_MIXED

/* Fortran names preserve the original case in stdcall */
#undef F77_NAME_MIXED_STDCALL

/* Fortran names preserve the original case with one trailing underscore */
#undef F77_NAME_MIXED_USCORE

/* Fortran names preserve the original case with one trailing underscore in
   stdcall */
#undef F77_NAME_MIXED_USCORE_STDCALL

/* Fortran names are uppercase */
#undef F77_NAME_UPPER

/* Fortran names are uppercase in stdcall */
#undef F77_NAME_UPPER_STDCALL

/* Define if CUDA is available */
#undef HAVE_CUDA

/* Define to 1 if you have the <dlfcn.h> header file. */
#undef HAVE_DLFCN_H

/* Define to 1 if the system has the type `double _Complex'. */
#undef HAVE_DOUBLE__COMPLEX

/* Define to 1 if the system has the type `float _Complex'. */
#undef HAVE_FLOAT__COMPLEX

/* Define if Fortran is supported */
#undef HAVE_FORTRAN_BINDING

/* Define to 1 if you have the `getrusage' function. */
#undef HAVE_GETRUSAGE

/* Define if struct hostent contains h_addr_list */
#undef HAVE_H_ADDR_LIST

/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* Define if iostream is available */
#undef HAVE_IOSTREAM

/* Define to 1 if you have the <iostream.h> header file. */
#undef HAVE_IOSTREAM_H

/* Define to 1 if you have the `abt' library (-labt). */
#undef HAVE_LIBABT

/* Define to 1 if you have the `cudart' library (-lcudart). */
#undef HAVE_LIBCUDART

/* Define to 1 if you have the `ze_loader' library (-lze_loader). */
#undef HAVE_LIBZE_LOADER

/* Define if long double is supported */
#undef HAVE_LONG_DOUBLE

/* Define to 1 if the system has the type `long double _Complex'. */
#undef HAVE_LONG_DOUBLE__COMPLEX

/* Define if compiler supports long long */
#undef HAVE_LONG_LONG

/* Define to 1 if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H

/* Define if MPI_INTEGER16 is available */
#undef HAVE_MPI_INTEGER16

/* Define if MPI-IO (really ROMIO) is included */
#undef HAVE_MPI_IO

/* Define if Dynamic Process functionality is available */
#undef HAVE_MPI_SPAWN

/* Define if MPI_Win_create is available */
#undef HAVE_MPI_WIN_CREATE

/* define if the compiler implements namespaces */
#undef HAVE_NAMESPACES

/* define if the compiler implements namespace std */
#undef HAVE_NAMESPACE_STD

/* Define to 1 if you have the <pthread.h> header file. */
#undef HAVE_PTHREAD_H

/* Define to 1 if you have the <stdarg.h> header file. */
#undef HAVE_STDARG_H

/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Define to 1 if you have the <sys/resource.h> header file. */
#undef HAVE_SYS_RESOURCE_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/time.h> header file. */
#undef HAVE_SYS_TIME_H

/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* Define if ZE is available */
#undef HAVE_ZE

/* Define to 1 if the system has the type `_Bool'. */
#undef HAVE__BOOL

/* Define to the sub-directory where libtool stores uninstalled libraries. */
#undef LT_OBJDIR

/* Define if MPI IO uses MPI_Request */
#undef MPIO_USES_MPI_REQUEST

/* Name of package */
#undef PACKAGE

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the home page for this package. */
#undef PACKAGE_URL

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* POINTERINT_t is a pointer-sized integer */
#undef POINTERINT_t

/* The size of `int', as computed by sizeof. */
#undef SIZEOF_INT

/* The size of `long', as computed by sizeof. */
#undef SIZEOF_LONG

/* The size of `long long', as computed by sizeof. */
#undef SIZEOF_LONG_LONG

/* The size of `MPI_Offset', as computed by sizeof. */
#undef SIZEOF_MPI_OFFSET

/* The size of `short', as computed by sizeof. */
#undef SIZEOF_SHORT

/* The size of `void *', as computed by sizeof. */
#undef SIZEOF_VOID_P

/* Define calling convention */
#undef STDCALL

/* Define to 1 if you have the ANSI C header files. */
#undef STDC_HEADERS

/* set to the name of the thread package */
#undef THREAD_PACKAGE_NAME

/* Define if tests with long double complex should be included */
#undef USE_LONG_DOUBLE_COMPLEX

/* Define if only operations defined in MPI should be tested */
#undef USE_STRICT_MPI

/* Version number of package */
#undef VERSION

/* Define for Solaris 2.5.1 so the uint32_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#undef _UINT32_T

/* Define for Solaris 2.5.1 so the uint64_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#undef _UINT64_T

/* Define for Solaris 2.5.1 so the uint8_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#undef _UINT8_T

/* Define to empty if `const' does not conform to ANSI C. */
#undef const

/* Define to the type of a signed integer type of width exactly 16 bits if
   such a type exists and the standard includes do not define it. */
#undef int16_t

/* Define to the type of a signed integer type of width exactly 32 bits if
   such a type exists and the standard includes do not define it. */
#undef int32_t

/* Define to the type of a signed integer type of width exactly 64 bits if
   such a type exists and the standard includes do not define it. */
#undef int64_t

/* Define to the type of a signed integer type of width exactly 8 bits if such
   a type exists and the standard includes do not define it. */
#undef int8_t

/* Define to the equivalent of the C99 'restrict' keyword, or to
   nothing if this is not supported.  Do not define if restrict is
   supported directly.  */
#undef restrict
/* Work around a bug in Sun C++: it does not support _Restrict or
   __restrict__, even though the corresponding Sun C compiler ends up with
   "#define restrict _Restrict" or "#define restrict __restrict__" in the
   previous line.  Perhaps some future version of Sun C++ will work with
   restrict; if so, hopefully it defines __RESTRICT like Sun C does.  */
#if defined __SUNPRO_CC && !defined __RESTRICT
# define _Restrict
# define __restrict__
#endif

/* Define to the type of an unsigned integer type of width exactly 16 bits if
   such a type exists and the standard includes do not define it. */
#undef uint16_t

/* Define to the type of an unsigned integer type of width exactly 32 bits if
   such a type exists and the standard includes do not define it. */
#undef uint32_t

/* Define to the type of an unsigned integer type of width exactly 64 bits if
   such a type exists and the standard includes do not define it. */
#undef uint64_t

/* Define to the type of an unsigned integer type of width exactly 8 bits if
   such a type exists and the standard includes do not define it. */
#undef uint8_t

#endif

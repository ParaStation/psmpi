.TH MPI_Rput 3 "11/12/2019" " " "MPI"
.SH NAME
MPI_Rput \-  Put data into a memory window on a remote process and return a request handle for the operation. 
.SH SYNOPSIS
.nf
int MPI_Rput(const void *origin_addr, int origin_count, MPI_Datatype
origin_datatype, int target_rank, MPI_Aint target_disp,
int target_count, MPI_Datatype target_datatype, MPI_Win win, MPI_Request * request)
.fi

.I MPI_Rput
is similar to 
.I MPI_Put
, except that it allocates a
communication request object and associates it with the request handle (the
argument request). The completion of an 
.I MPI_Rput
operation (i.e., after the
corresponding test or wait) indicates that the sender is now free to update
the locations in the origin buffer. It does not indicate that the data is
available at the target window. If remote completion is required,
.I MPI_Win_flush
, 
.I MPI_Win_flush_all
, 
.I MPI_Win_unlock
, or 
.I MPI_Win_unlock_all
can be
used.

.SH INPUT PARAMETERS
.PD 0
.TP
.B origin_addr 
- initial address of origin buffer (choice)
.PD 1
.PD 0
.TP
.B origin_count 
- number of entries in origin buffer (nonnegative integer)
.PD 1
.PD 0
.TP
.B origin_datatype 
- datatype of each entry in origin buffer (handle)
.PD 1
.PD 0
.TP
.B target_rank 
- rank of target (nonnegative integer)
.PD 1
.PD 0
.TP
.B target_disp 
- displacement from start of window to target buffer (nonnegative integer)
.PD 1
.PD 0
.TP
.B target_count 
- number of entries in target buffer (nonnegative integer)
.PD 1
.PD 0
.TP
.B target_datatype 
- datatype of each entry in target buffer (handle)
.PD 1
.PD 0
.TP
.B win 
- window object used for communication (handle)
.PD 1

.SH OUTPUT PARAMETERS
.PD 0
.TP
.B request 
- RMA request (handle)
.PD 1

.SH THREAD AND INTERRUPT SAFETY

This routine is thread-safe.  This means that this routine may be
safely used by multiple threads without the need for any user-provided
thread locks.  However, the routine is not interrupt safe.  Typically,
this is due to the use of memory allocation routines such as 
.I malloc
or other non-MPICH runtime routines that are themselves not interrupt-safe.

.SH NOTES FOR FORTRAN
All MPI routines in Fortran (except for 
.I MPI_WTIME
and 
.I MPI_WTICK
) have
an additional argument 
.I ierr
at the end of the argument list.  
.I ierr
is an integer and has the same meaning as the return value of the routine
in C.  In Fortran, MPI routines are subroutines, and are invoked with the
.I call
statement.

All MPI objects (e.g., 
.I MPI_Datatype
, 
.I MPI_Comm
) are of type 
.I INTEGER
in Fortran.

.SH ERRORS

All MPI routines (except 
.I MPI_Wtime
and 
.I MPI_Wtick
) return an error value;
C routines as the value of the function and Fortran routines in the last
argument.  Before the value is returned, the current MPI error handler is
called.  By default, this error handler aborts the MPI job.  The error handler
may be changed with 
.I MPI_Comm_set_errhandler
(for communicators),
.I MPI_File_set_errhandler
(for files), and 
.I MPI_Win_set_errhandler
(for
RMA windows).  The MPI-1 routine 
.I MPI_Errhandler_set
may be used but
its use is deprecated.  The predefined error handler
.I MPI_ERRORS_RETURN
may be used to cause error values to be returned.
Note that MPI does 
.B not
guarentee that an MPI program can continue past
an error; however, MPI implementations will attempt to continue whenever
possible.

.PD 0
.TP
.B MPI_SUCCESS 
- No error; MPI routine completed successfully.
.PD 1
.PD 0
.TP
.B MPI_ERR_ARG 
- Invalid argument.  Some argument is invalid and is not
identified by a specific error class (e.g., 
.I MPI_ERR_RANK
).
.PD 1
.PD 0
.TP
.B MPI_ERR_COUNT 
- Invalid count argument.  Count arguments must be 
non-negative; a count of zero is often valid.
.PD 1
.PD 0
.TP
.B MPI_ERR_RANK 
- Invalid source or destination rank.  Ranks must be between
zero and the size of the communicator minus one; ranks in a receive
(
.I MPI_Recv
, 
.I MPI_Irecv
, 
.I MPI_Sendrecv
, etc.) may also be 
.I MPI_ANY_SOURCE
\&.

.PD 1
.PD 0
.TP
.B MPI_ERR_TYPE 
- Invalid datatype argument.  Additionally, this error can
occur if an uncommitted MPI_Datatype (see 
.I MPI_Type_commit
) is used
in a communication call.
.PD 1
.PD 0
.TP
.B MPI_ERR_WIN 
- Invalid MPI window object
.PD 1

.SH SEE ALSO
MPI_Put
.br

.TH MPI_Win_get_info 3 "11/12/2019" " " "MPI"
.SH NAME
MPI_Win_get_info \-  Returns a new info object containing the hints of the window associated with win. 
.SH SYNOPSIS
.nf
int MPI_Win_get_info(MPI_Win win, MPI_Info * info_used)
.fi

The current setting of all hints actually used by the system related to this
window is returned in info_used. If no such hints exist, a handle to a newly
created info object is returned that contains no key/value pair. The user is
responsible for freeing info_used via 
.I MPI_Info_free
\&.


.SH INPUT PARAMETERS
.PD 0
.TP
.B win 
- window object (handle)
.PD 1

.SH OUTPUT PARAMETERS
.PD 0
.TP
.B info_used 
- new info argument (handle)
.PD 1

.SH NOTES

The info object returned in info_used will contain all hints currently active
for this window. This set of hints may be greater or smaller than the set of
hints specified when the window was created, as the system may not recognize
some hints set by the user, and may recognize other hints that the user has not
set.

.SH THREAD AND INTERRUPT SAFETY

This routine is thread-safe.  This means that this routine may be
safely used by multiple threads without the need for any user-provided
thread locks.  However, the routine is not interrupt safe.  Typically,
this is due to the use of memory allocation routines such as 
.I malloc
or other non-MPICH runtime routines that are themselves not interrupt-safe.
.SH NOTES FOR FORTRAN
All MPI routines in Fortran (except for 
.I MPI_WTIME
and 
.I MPI_WTICK
) have
an additional argument 
.I ierr
at the end of the argument list.  
.I ierr
is an integer and has the same meaning as the return value of the routine
in C.  In Fortran, MPI routines are subroutines, and are invoked with the
.I call
statement.

All MPI objects (e.g., 
.I MPI_Datatype
, 
.I MPI_Comm
) are of type 
.I INTEGER
in Fortran.

.SH ERRORS

All MPI routines (except 
.I MPI_Wtime
and 
.I MPI_Wtick
) return an error value;
C routines as the value of the function and Fortran routines in the last
argument.  Before the value is returned, the current MPI error handler is
called.  By default, this error handler aborts the MPI job.  The error handler
may be changed with 
.I MPI_Comm_set_errhandler
(for communicators),
.I MPI_File_set_errhandler
(for files), and 
.I MPI_Win_set_errhandler
(for
RMA windows).  The MPI-1 routine 
.I MPI_Errhandler_set
may be used but
its use is deprecated.  The predefined error handler
.I MPI_ERRORS_RETURN
may be used to cause error values to be returned.
Note that MPI does 
.B not
guarentee that an MPI program can continue past
an error; however, MPI implementations will attempt to continue whenever
possible.

.PD 0
.TP
.B MPI_SUCCESS 
- No error; MPI routine completed successfully.
.PD 1
.PD 0
.TP
.B MPI_ERR_ARG 
- Invalid argument.  Some argument is invalid and is not
identified by a specific error class (e.g., 
.I MPI_ERR_RANK
).
.PD 1
.PD 0
.TP
.B MPI_ERR_WIN 
- Invalid MPI window object
.PD 1
.PD 0
.TP
.B MPI_ERR_INFO 
- Invalid Info 
.PD 1
.PD 0
.TP
.B MPI_ERR_OTHER 
- Other error; use 
.I MPI_Error_string
to get more information
about this error code. 
.PD 1

.SH SEE ALSO
MPI_Win_set_info
.br

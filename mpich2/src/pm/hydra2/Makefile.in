# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# -*- Mode: Makefile; -*-
#
# (C) 2009 by Argonne National Laboratory.
#     See COPYRIGHT in top-level directory.
#



VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = mpiexec.hydra$(EXEEXT) hydra_pmi_proxy$(EXEEXT) \
	hydra_nameserver$(EXEEXT) hydra_bstrap_proxy$(EXEEXT)
@hydra_have_poll_TRUE@am__append_1 = libhydra/demux/hydra_demux_poll.c
@hydra_have_select_TRUE@am__append_2 = libhydra/demux/hydra_demux_select.c
@hydra_have_hwloc_TRUE@am__append_3 = libhydra/topo/hwloc/hydra_topo_hwloc.c
@hydra_have_hwloc_TRUE@am__append_4 = libhydra/topo/hwloc/hydra_topo_hwloc.h
@hydra_have_hwloc_TRUE@@hydra_use_embedded_hwloc_TRUE@am__append_5 = @HWLOC_EMBEDDED_CPPFLAGS@
@hydra_have_hwloc_TRUE@@hydra_use_embedded_hwloc_TRUE@am__append_6 = @HWLOC_EMBEDDED_CFLAGS@

# Append hwloc to the external subdirs, so it gets built first
@hydra_have_hwloc_TRUE@@hydra_use_embedded_hwloc_TRUE@am__append_7 = libhydra/topo/hwloc/hwloc
@hydra_have_hwloc_TRUE@@hydra_use_embedded_hwloc_TRUE@am__append_8 = libhydra/topo/hwloc/hwloc
@hydra_have_hwloc_TRUE@@hydra_use_embedded_hwloc_TRUE@am__append_9 = @HWLOC_EMBEDDED_LDADD@ @HWLOC_EMBEDDED_LIBS@
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps =  \
	$(top_srcdir)/libhydra/topo/hwloc/hwloc/config/hwloc.m4 \
	$(top_srcdir)/libhydra/topo/hwloc/hwloc/config/hwloc_check_attributes.m4 \
	$(top_srcdir)/libhydra/topo/hwloc/hwloc/config/hwloc_check_vendor.m4 \
	$(top_srcdir)/libhydra/topo/hwloc/hwloc/config/hwloc_check_visibility.m4 \
	$(top_srcdir)/libhydra/topo/hwloc/hwloc/config/hwloc_components.m4 \
	$(top_srcdir)/libhydra/topo/hwloc/hwloc/config/hwloc_pkg.m4 \
	$(top_srcdir)/libhydra/topo/hwloc/hwloc/config/netloc.m4 \
	$(top_srcdir)/confdb/aclocal_cache.m4 \
	$(top_srcdir)/confdb/aclocal_cc.m4 \
	$(top_srcdir)/confdb/aclocal_coverage.m4 \
	$(top_srcdir)/confdb/aclocal_libs.m4 \
	$(top_srcdir)/confdb/aclocal_runlog.m4 \
	$(top_srcdir)/confdb/aclocal_subcfg.m4 \
	$(top_srcdir)/confdb/aclocal_util.m4 \
	$(top_srcdir)/confdb/libtool.m4 \
	$(top_srcdir)/confdb/ltoptions.m4 \
	$(top_srcdir)/confdb/ltsugar.m4 \
	$(top_srcdir)/confdb/ltversion.m4 \
	$(top_srcdir)/confdb/lt~obsolete.m4 $(top_srcdir)/version.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(am__noinst_HEADERS_DIST) \
	$(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/libhydra/include/hydra_config.h \
	$(top_builddir)/libhydra/topo/hwloc/hwloc/include/private/autogen/config.h \
	$(top_builddir)/libhydra/topo/hwloc/hwloc/include/hwloc/autogen/config.h
CONFIG_CLEAN_FILES = libhydra/rmk/src/hydra_rmk.c \
	libhydra/bstrap/src/hydra_bstrap.c hydra-doxygen.cfg
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libhydra_la_LIBADD =
am__libhydra_la_SOURCES_DIST = libhydra/arg/hydra_arg.c \
	libhydra/demux/hydra_demux.c \
	libhydra/demux/hydra_demux_internal.c \
	libhydra/demux/hydra_demux_splice.c \
	libhydra/demux/hydra_demux_poll.c \
	libhydra/demux/hydra_demux_select.c libhydra/env/hydra_env.c \
	libhydra/exec/hydra_exec.c libhydra/fs/hydra_fs.c \
	libhydra/node/hydra_node.c libhydra/err/hydra_err.c \
	libhydra/signal/hydra_signal.c libhydra/sock/hydra_sock.c \
	libhydra/spawn/hydra_spawn.c libhydra/str/hydra_str.c \
	libhydra/topo/hydra_topo.c \
	libhydra/topo/hwloc/hydra_topo_hwloc.c \
	libhydra/tree/hydra_tree.c libhydra/bstrap/src/hydra_bstrap.c \
	libhydra/bstrap/ssh/ssh_internal.c \
	libhydra/bstrap/ssh/ssh_launch.c \
	libhydra/bstrap/ssh/ssh_finalize.c \
	libhydra/bstrap/slurm/slurm_launch.c \
	libhydra/bstrap/slurm/slurm_finalize.c \
	libhydra/bstrap/rsh/rsh_launch.c \
	libhydra/bstrap/rsh/rsh_finalize.c \
	libhydra/bstrap/ll/ll_launch.c \
	libhydra/bstrap/ll/ll_finalize.c \
	libhydra/bstrap/sge/sge_launch.c \
	libhydra/bstrap/sge/sge_finalize.c \
	libhydra/hostfile/hydra_hostfile.c \
	libhydra/rmk/src/hydra_rmk.c libhydra/rmk/slurm/slurm_detect.c \
	libhydra/rmk/slurm/slurm_query_node_list.c \
	libhydra/rmk/ll/ll_detect.c \
	libhydra/rmk/ll/ll_query_node_list.c \
	libhydra/rmk/lsf/lsf_detect.c \
	libhydra/rmk/lsf/lsf_query_node_list.c \
	libhydra/rmk/sge/sge_detect.c \
	libhydra/rmk/sge/sge_query_node_list.c \
	libhydra/rmk/pbs/pbs_detect.c \
	libhydra/rmk/pbs/pbs_query_node_list.c \
	libhydra/rmk/cobalt/cobalt_detect.c \
	libhydra/rmk/cobalt/cobalt_query_node_list.c \
	libhydra/debugger/hydra_debugger.c
am__dirstamp = $(am__leading_dot)dirstamp
@hydra_have_poll_TRUE@am__objects_1 =  \
@hydra_have_poll_TRUE@	libhydra/demux/hydra_demux_poll.lo
@hydra_have_select_TRUE@am__objects_2 =  \
@hydra_have_select_TRUE@	libhydra/demux/hydra_demux_select.lo
@hydra_have_hwloc_TRUE@am__objects_3 = libhydra/topo/hwloc/hydra_topo_hwloc.lo
am_libhydra_la_OBJECTS = libhydra/arg/hydra_arg.lo \
	libhydra/demux/hydra_demux.lo \
	libhydra/demux/hydra_demux_internal.lo \
	libhydra/demux/hydra_demux_splice.lo $(am__objects_1) \
	$(am__objects_2) libhydra/env/hydra_env.lo \
	libhydra/exec/hydra_exec.lo libhydra/fs/hydra_fs.lo \
	libhydra/node/hydra_node.lo libhydra/err/hydra_err.lo \
	libhydra/signal/hydra_signal.lo libhydra/sock/hydra_sock.lo \
	libhydra/spawn/hydra_spawn.lo libhydra/str/hydra_str.lo \
	libhydra/topo/hydra_topo.lo $(am__objects_3) \
	libhydra/tree/hydra_tree.lo \
	libhydra/bstrap/src/hydra_bstrap.lo \
	libhydra/bstrap/ssh/ssh_internal.lo \
	libhydra/bstrap/ssh/ssh_launch.lo \
	libhydra/bstrap/ssh/ssh_finalize.lo \
	libhydra/bstrap/slurm/slurm_launch.lo \
	libhydra/bstrap/slurm/slurm_finalize.lo \
	libhydra/bstrap/rsh/rsh_launch.lo \
	libhydra/bstrap/rsh/rsh_finalize.lo \
	libhydra/bstrap/ll/ll_launch.lo \
	libhydra/bstrap/ll/ll_finalize.lo \
	libhydra/bstrap/sge/sge_launch.lo \
	libhydra/bstrap/sge/sge_finalize.lo \
	libhydra/hostfile/hydra_hostfile.lo \
	libhydra/rmk/src/hydra_rmk.lo \
	libhydra/rmk/slurm/slurm_detect.lo \
	libhydra/rmk/slurm/slurm_query_node_list.lo \
	libhydra/rmk/ll/ll_detect.lo \
	libhydra/rmk/ll/ll_query_node_list.lo \
	libhydra/rmk/lsf/lsf_detect.lo \
	libhydra/rmk/lsf/lsf_query_node_list.lo \
	libhydra/rmk/sge/sge_detect.lo \
	libhydra/rmk/sge/sge_query_node_list.lo \
	libhydra/rmk/pbs/pbs_detect.lo \
	libhydra/rmk/pbs/pbs_query_node_list.lo \
	libhydra/rmk/cobalt/cobalt_detect.lo \
	libhydra/rmk/cobalt/cobalt_query_node_list.lo \
	libhydra/debugger/hydra_debugger.lo
libhydra_la_OBJECTS = $(am_libhydra_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libmpx_la_LIBADD =
am_libmpx_la_OBJECTS = common/mpx_bcast.lo common/mpx_env.lo
libmpx_la_OBJECTS = $(am_libmpx_la_OBJECTS)
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_hydra_bstrap_proxy_OBJECTS = libhydra/bstrap/src/hydra_bstrap_proxy-hydra_bstrap_proxy.$(OBJEXT)
hydra_bstrap_proxy_OBJECTS = $(am_hydra_bstrap_proxy_OBJECTS)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
hydra_bstrap_proxy_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(hydra_bstrap_proxy_CFLAGS) $(CFLAGS) \
	$(hydra_bstrap_proxy_LDFLAGS) $(LDFLAGS) -o $@
am_hydra_nameserver_OBJECTS =  \
	nameserver/hydra_nameserver-hydra_nameserver.$(OBJEXT)
hydra_nameserver_OBJECTS = $(am_hydra_nameserver_OBJECTS)
hydra_nameserver_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(hydra_nameserver_CFLAGS) $(CFLAGS) \
	$(hydra_nameserver_LDFLAGS) $(LDFLAGS) -o $@
am_hydra_pmi_proxy_OBJECTS = proxy/hydra_pmi_proxy-proxy.$(OBJEXT) \
	proxy/hydra_pmi_proxy-proxy_cb.$(OBJEXT) \
	proxy/hydra_pmi_proxy-proxy_pmi.$(OBJEXT) \
	proxy/hydra_pmi_proxy-proxy_pmi_cb.$(OBJEXT)
hydra_pmi_proxy_OBJECTS = $(am_hydra_pmi_proxy_OBJECTS)
hydra_pmi_proxy_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(hydra_pmi_proxy_CFLAGS) $(CFLAGS) $(hydra_pmi_proxy_LDFLAGS) \
	$(LDFLAGS) -o $@
am_mpiexec_hydra_OBJECTS = mpiexec/mpiexec.$(OBJEXT) \
	mpiexec/mpiexec_params.$(OBJEXT) mpiexec/mpiexec_pmi.$(OBJEXT) \
	mpiexec/mpiexec_utils.$(OBJEXT)
mpiexec_hydra_OBJECTS = $(am_mpiexec_hydra_OBJECTS)
mpiexec_hydra_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(mpiexec_hydra_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/libhydra/include -I$(top_builddir)/libhydra/topo/hwloc/hwloc/include/private/autogen -I$(top_builddir)/libhydra/topo/hwloc/hwloc/include/hwloc/autogen
depcomp = $(SHELL) $(top_srcdir)/confdb/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libhydra_la_SOURCES) $(libmpx_la_SOURCES) \
	$(hydra_bstrap_proxy_SOURCES) $(hydra_nameserver_SOURCES) \
	$(hydra_pmi_proxy_SOURCES) $(mpiexec_hydra_SOURCES)
DIST_SOURCES = $(am__libhydra_la_SOURCES_DIST) $(libmpx_la_SOURCES) \
	$(hydra_bstrap_proxy_SOURCES) $(hydra_nameserver_SOURCES) \
	$(hydra_pmi_proxy_SOURCES) $(mpiexec_hydra_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__noinst_HEADERS_DIST = mpiexec/mpiexec.h proxy/proxy.h common/mpx.h \
	libhydra/arg/hydra_arg.h libhydra/demux/hydra_demux.h \
	libhydra/demux/hydra_demux_internal.h libhydra/env/hydra_env.h \
	libhydra/exec/hydra_exec.h libhydra/fs/hydra_fs.h \
	libhydra/include/hydra.h libhydra/include/hydra_base.h \
	libhydra/mem/hydra_mem.h libhydra/node/hydra_node.h \
	libhydra/err/hydra_err.h libhydra/signal/hydra_signal.h \
	libhydra/sock/hydra_sock.h libhydra/spawn/hydra_spawn.h \
	libhydra/str/hydra_str.h libhydra/topo/hydra_topo.h \
	libhydra/topo/hydra_topo_internal.h \
	libhydra/topo/hwloc/hydra_topo_hwloc.h \
	libhydra/tree/hydra_tree.h \
	libhydra/bstrap/src/hydra_bstrap_common.h \
	libhydra/bstrap/src/hydra_bstrap.h \
	libhydra/bstrap/ssh/hydra_bstrap_ssh.h \
	libhydra/bstrap/ssh/ssh_internal.h \
	libhydra/bstrap/slurm/hydra_bstrap_slurm.h \
	libhydra/bstrap/rsh/hydra_bstrap_rsh.h \
	libhydra/bstrap/ll/hydra_bstrap_ll.h \
	libhydra/bstrap/sge/hydra_bstrap_sge.h \
	libhydra/hostfile/hydra_hostfile.h \
	libhydra/rmk/src/hydra_rmk.h \
	libhydra/rmk/slurm/hydra_rmk_slurm.h \
	libhydra/rmk/ll/hydra_rmk_ll.h \
	libhydra/rmk/lsf/hydra_rmk_lsf.h \
	libhydra/rmk/sge/hydra_rmk_sge.h \
	libhydra/rmk/pbs/hydra_rmk_pbs.h \
	libhydra/rmk/cobalt/hydra_rmk_cobalt.h \
	libhydra/hash/hydra_hash.h libhydra/debugger/hydra_debugger.h
HEADERS = $(noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	cscope distdir dist dist-all distcheck
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/common/Makefile.mk \
	$(srcdir)/hydra-doxygen.cfg.in $(srcdir)/libhydra/Makefile.mk \
	$(srcdir)/libhydra/arg/Makefile.mk \
	$(srcdir)/libhydra/bstrap/Makefile.mk \
	$(srcdir)/libhydra/bstrap/ll/Makefile.mk \
	$(srcdir)/libhydra/bstrap/rsh/Makefile.mk \
	$(srcdir)/libhydra/bstrap/sge/Makefile.mk \
	$(srcdir)/libhydra/bstrap/slurm/Makefile.mk \
	$(srcdir)/libhydra/bstrap/src/Makefile.mk \
	$(srcdir)/libhydra/bstrap/ssh/Makefile.mk \
	$(srcdir)/libhydra/debugger/Makefile.mk \
	$(srcdir)/libhydra/demux/Makefile.mk \
	$(srcdir)/libhydra/env/Makefile.mk \
	$(srcdir)/libhydra/err/Makefile.mk \
	$(srcdir)/libhydra/exec/Makefile.mk \
	$(srcdir)/libhydra/fs/Makefile.mk \
	$(srcdir)/libhydra/hash/Makefile.mk \
	$(srcdir)/libhydra/hostfile/Makefile.mk \
	$(srcdir)/libhydra/include/Makefile.mk \
	$(srcdir)/libhydra/mem/Makefile.mk \
	$(srcdir)/libhydra/node/Makefile.mk \
	$(srcdir)/libhydra/rmk/Makefile.mk \
	$(srcdir)/libhydra/rmk/cobalt/Makefile.mk \
	$(srcdir)/libhydra/rmk/ll/Makefile.mk \
	$(srcdir)/libhydra/rmk/lsf/Makefile.mk \
	$(srcdir)/libhydra/rmk/pbs/Makefile.mk \
	$(srcdir)/libhydra/rmk/sge/Makefile.mk \
	$(srcdir)/libhydra/rmk/slurm/Makefile.mk \
	$(srcdir)/libhydra/rmk/src/Makefile.mk \
	$(srcdir)/libhydra/signal/Makefile.mk \
	$(srcdir)/libhydra/sock/Makefile.mk \
	$(srcdir)/libhydra/spawn/Makefile.mk \
	$(srcdir)/libhydra/str/Makefile.mk \
	$(srcdir)/libhydra/topo/Makefile.mk \
	$(srcdir)/libhydra/topo/hwloc/Makefile.mk \
	$(srcdir)/libhydra/tree/Makefile.mk \
	$(srcdir)/mpiexec/Makefile.mk $(srcdir)/nameserver/Makefile.mk \
	$(srcdir)/proxy/Makefile.mk $(top_srcdir)/confdb/ar-lib \
	$(top_srcdir)/confdb/compile $(top_srcdir)/confdb/config.guess \
	$(top_srcdir)/confdb/config.sub $(top_srcdir)/confdb/depcomp \
	$(top_srcdir)/confdb/install-sh $(top_srcdir)/confdb/ltmain.sh \
	$(top_srcdir)/confdb/missing \
	$(top_srcdir)/libhydra/bstrap/src/hydra_bstrap.c.in \
	$(top_srcdir)/libhydra/include/hydra_config.h.in \
	$(top_srcdir)/libhydra/rmk/src/hydra_rmk.c.in \
	$(top_srcdir)/libhydra/topo/hwloc/hwloc/include/hwloc/autogen/config.h.in \
	$(top_srcdir)/libhydra/topo/hwloc/hwloc/include/private/autogen/config.h.in \
	README confdb/ar-lib confdb/compile confdb/config.guess \
	confdb/config.rpath confdb/config.sub confdb/depcomp \
	confdb/install-sh confdb/ltmain.sh confdb/missing
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BASH = @BASH@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOCTEXT = @DOCTEXT@
DOXYGEN = @DOXYGEN@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GCOV = @GCOV@
GREP = @GREP@
HWLOC_CFLAGS = @HWLOC_CFLAGS@
HWLOC_CPPFLAGS = @HWLOC_CPPFLAGS@
HWLOC_CUDA_LIBS = @HWLOC_CUDA_LIBS@
HWLOC_EMBEDDED_CFLAGS = @HWLOC_EMBEDDED_CFLAGS@
HWLOC_EMBEDDED_CPPFLAGS = @HWLOC_EMBEDDED_CPPFLAGS@
HWLOC_EMBEDDED_LDADD = @HWLOC_EMBEDDED_LDADD@
HWLOC_EMBEDDED_LIBS = @HWLOC_EMBEDDED_LIBS@
HWLOC_GL_LIBS = @HWLOC_GL_LIBS@
HWLOC_HAVE_LIBXML2 = @HWLOC_HAVE_LIBXML2@
HWLOC_HAVE_NVML = @HWLOC_HAVE_NVML@
HWLOC_HAVE_OPENCL = @HWLOC_HAVE_OPENCL@
HWLOC_LDFLAGS = @HWLOC_LDFLAGS@
HWLOC_LIBS = @HWLOC_LIBS@
HWLOC_LIBS_PRIVATE = @HWLOC_LIBS_PRIVATE@
HWLOC_LIBXML2_CFLAGS = @HWLOC_LIBXML2_CFLAGS@
HWLOC_LIBXML2_LIBS = @HWLOC_LIBXML2_LIBS@
HWLOC_MS_LIB = @HWLOC_MS_LIB@
HWLOC_MS_LIB_ARCH = @HWLOC_MS_LIB_ARCH@
HWLOC_NVML_LIBS = @HWLOC_NVML_LIBS@
HWLOC_OPENCL_CFLAGS = @HWLOC_OPENCL_CFLAGS@
HWLOC_OPENCL_LDFLAGS = @HWLOC_OPENCL_LDFLAGS@
HWLOC_OPENCL_LIBS = @HWLOC_OPENCL_LIBS@
HWLOC_PCIACCESS_CFLAGS = @HWLOC_PCIACCESS_CFLAGS@
HWLOC_PCIACCESS_LIBS = @HWLOC_PCIACCESS_LIBS@
HWLOC_PLUGINS_DIR = @HWLOC_PLUGINS_DIR@
HWLOC_PLUGINS_PATH = @HWLOC_PLUGINS_PATH@
HWLOC_RELEASE_DATE = @HWLOC_RELEASE_DATE@
HWLOC_REQUIRES = @HWLOC_REQUIRES@
HWLOC_VERSION = @HWLOC_VERSION@
HWLOC_X11_CPPFLAGS = @HWLOC_X11_CPPFLAGS@
HWLOC_X11_LIBS = @HWLOC_X11_LIBS@
HWLOC_top_builddir = @HWLOC_top_builddir@
HWLOC_top_srcdir = @HWLOC_top_srcdir@
HYDRA_BSTRAP_PROXY = @HYDRA_BSTRAP_PROXY@
HYDRA_PMI_PROXY = @HYDRA_PMI_PROXY@
HYDRA_VERSION = @HYDRA_VERSION@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
MPIEXEC_HYDRA_NAME = @MPIEXEC_HYDRA_NAME@
MPIEXEC_NAME = @MPIEXEC_NAME@
MPIRUN_NAME = @MPIRUN_NAME@
MPLLIBNAME = @MPLLIBNAME@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
WRAPPER_LIBS = @WRAPPER_LIBS@
XMKMF = @XMKMF@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
hydra_bstrap_finalize_fns = @hydra_bstrap_finalize_fns@
hydra_bstrap_includes = @hydra_bstrap_includes@
hydra_bstrap_launch_fns = @hydra_bstrap_launch_fns@
hydra_bstrap_names = @hydra_bstrap_names@
hydra_rmk_detect_fns = @hydra_rmk_detect_fns@
hydra_rmk_includes = @hydra_rmk_includes@
hydra_rmk_names = @hydra_rmk_names@
hydra_rmk_query_node_list_fns = @hydra_rmk_query_node_list_fns@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
mpl_dist_srcdir = @mpl_dist_srcdir@
mpl_includedir = @mpl_includedir@
mpl_lib = @mpl_lib@
mpl_libdir = @mpl_libdir@
mpl_srcdir = @mpl_srcdir@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
external_subdirs = @mpl_srcdir@ $(am__append_7)
external_dist_subdirs = @mpl_dist_srcdir@ $(am__append_8)
external_includes = @mpl_includedir@
external_ldflags = @mpl_libdir@
external_libs = @mpl_lib@ @WRAPPER_LIBS@ $(am__append_9)
noinst_HEADERS = mpiexec/mpiexec.h proxy/proxy.h common/mpx.h \
	libhydra/arg/hydra_arg.h libhydra/demux/hydra_demux.h \
	libhydra/demux/hydra_demux_internal.h libhydra/env/hydra_env.h \
	libhydra/exec/hydra_exec.h libhydra/fs/hydra_fs.h \
	libhydra/include/hydra.h libhydra/include/hydra_base.h \
	libhydra/mem/hydra_mem.h libhydra/node/hydra_node.h \
	libhydra/err/hydra_err.h libhydra/signal/hydra_signal.h \
	libhydra/sock/hydra_sock.h libhydra/spawn/hydra_spawn.h \
	libhydra/str/hydra_str.h libhydra/topo/hydra_topo.h \
	libhydra/topo/hydra_topo_internal.h $(am__append_4) \
	libhydra/tree/hydra_tree.h \
	libhydra/bstrap/src/hydra_bstrap_common.h \
	libhydra/bstrap/src/hydra_bstrap.h \
	libhydra/bstrap/ssh/hydra_bstrap_ssh.h \
	libhydra/bstrap/ssh/ssh_internal.h \
	libhydra/bstrap/slurm/hydra_bstrap_slurm.h \
	libhydra/bstrap/rsh/hydra_bstrap_rsh.h \
	libhydra/bstrap/ll/hydra_bstrap_ll.h \
	libhydra/bstrap/sge/hydra_bstrap_sge.h \
	libhydra/hostfile/hydra_hostfile.h \
	libhydra/rmk/src/hydra_rmk.h \
	libhydra/rmk/slurm/hydra_rmk_slurm.h \
	libhydra/rmk/ll/hydra_rmk_ll.h \
	libhydra/rmk/lsf/hydra_rmk_lsf.h \
	libhydra/rmk/sge/hydra_rmk_sge.h \
	libhydra/rmk/pbs/hydra_rmk_pbs.h \
	libhydra/rmk/cobalt/hydra_rmk_cobalt.h \
	libhydra/hash/hydra_hash.h libhydra/debugger/hydra_debugger.h
noinst_LTLIBRARIES = libmpx.la libhydra.la

# created by confdb/aclocal_cache.m4
DISTCLEANFILES = config.system
EXTRA_DIST = autogen.sh

# --------------------------------------------------------------------------
#.PHONY: mandoc mandoc-local htmldoc htmldoc-local
SUFFIXES = .man-phony .html-phony .man1-phony .html1-phony .txt
doc1_src_txt = nameserver/hydra_nameserver.txt
ACLOCAL_AMFLAGS = -I confdb -I libhydra/topo/hwloc/hwloc/config
AM_CPPFLAGS = -I$(top_srcdir)/include $(external_includes) \
	-I$(top_srcdir)/mpiexec -I$(top_srcdir)/proxy \
	-I$(top_srcdir)/common -I$(top_srcdir)/libhydra/arg \
	-I$(top_srcdir)/libhydra/demux -I$(top_srcdir)/libhydra/env \
	-I$(top_srcdir)/libhydra/exec -I$(top_srcdir)/libhydra/fs \
	-I$(top_srcdir)/libhydra/include -I$(top_srcdir)/libhydra/mem \
	-I$(top_srcdir)/libhydra/node -I$(top_srcdir)/libhydra/err \
	-I$(top_srcdir)/libhydra/signal -I$(top_srcdir)/libhydra/sock \
	-I$(top_srcdir)/libhydra/spawn -I$(top_srcdir)/libhydra/str \
	-I$(top_srcdir)/libhydra/topo $(am__append_5) \
	-I$(top_srcdir)/libhydra/tree \
	-I$(top_srcdir)/libhydra/bstrap/src \
	-I$(top_srcdir)/libhydra/bstrap/ssh \
	-I$(top_srcdir)/libhydra/bstrap/slurm \
	-I$(top_srcdir)/libhydra/bstrap/rsh \
	-I$(top_srcdir)/libhydra/bstrap/ll \
	-I$(top_srcdir)/libhydra/bstrap/sge \
	-I$(top_srcdir)/libhydra/hostfile \
	-I$(top_srcdir)/libhydra/rmk/src \
	-I$(top_srcdir)/libhydra/rmk/slurm \
	-I$(top_srcdir)/libhydra/rmk/ll \
	-I$(top_srcdir)/libhydra/rmk/lsf \
	-I$(top_srcdir)/libhydra/rmk/sge \
	-I$(top_srcdir)/libhydra/rmk/pbs \
	-I$(top_srcdir)/libhydra/rmk/cobalt \
	-I$(top_srcdir)/libhydra/hash \
	-I$(top_srcdir)/libhydra/debugger
AM_CFLAGS = $(am__append_6)
mpiexec_hydra_SOURCES = \
	mpiexec/mpiexec.c \
	mpiexec/mpiexec_params.c \
	mpiexec/mpiexec_pmi.c \
	mpiexec/mpiexec_utils.c

mpiexec_hydra_LDFLAGS = $(external_ldflags) -L$(top_builddir)
mpiexec_hydra_LDADD = -lmpx -lhydra $(external_libs)
mpiexec_hydra_DEPENDENCIES = libmpx.la libhydra.la @mpl_lib@
hydra_pmi_proxy_SOURCES = \
	proxy/proxy.c \
	proxy/proxy_cb.c \
	proxy/proxy_pmi.c \
	proxy/proxy_pmi_cb.c

hydra_pmi_proxy_CFLAGS = $(AM_CFLAGS)
hydra_pmi_proxy_LDFLAGS = $(external_ldflags) -L$(top_builddir)
hydra_pmi_proxy_LDADD = -lhydra $(external_libs)
hydra_pmi_proxy_DEPENDENCIES = libhydra.la @mpl_lib@
libmpx_la_SOURCES = \
		common/mpx_bcast.c \
		common/mpx_env.c

hydra_nameserver_SOURCES = nameserver/hydra_nameserver.c
hydra_nameserver_CFLAGS = $(AM_CFLAGS)
hydra_nameserver_LDFLAGS = $(external_ldflags)
hydra_nameserver_LDADD = -lhydra $(external_libs)
hydra_nameserver_DEPENDENCIES = libhydra.la
libhydra_la_SOURCES = libhydra/arg/hydra_arg.c \
	libhydra/demux/hydra_demux.c \
	libhydra/demux/hydra_demux_internal.c \
	libhydra/demux/hydra_demux_splice.c $(am__append_1) \
	$(am__append_2) libhydra/env/hydra_env.c \
	libhydra/exec/hydra_exec.c libhydra/fs/hydra_fs.c \
	libhydra/node/hydra_node.c libhydra/err/hydra_err.c \
	libhydra/signal/hydra_signal.c libhydra/sock/hydra_sock.c \
	libhydra/spawn/hydra_spawn.c libhydra/str/hydra_str.c \
	libhydra/topo/hydra_topo.c $(am__append_3) \
	libhydra/tree/hydra_tree.c libhydra/bstrap/src/hydra_bstrap.c \
	libhydra/bstrap/ssh/ssh_internal.c \
	libhydra/bstrap/ssh/ssh_launch.c \
	libhydra/bstrap/ssh/ssh_finalize.c \
	libhydra/bstrap/slurm/slurm_launch.c \
	libhydra/bstrap/slurm/slurm_finalize.c \
	libhydra/bstrap/rsh/rsh_launch.c \
	libhydra/bstrap/rsh/rsh_finalize.c \
	libhydra/bstrap/ll/ll_launch.c \
	libhydra/bstrap/ll/ll_finalize.c \
	libhydra/bstrap/sge/sge_launch.c \
	libhydra/bstrap/sge/sge_finalize.c \
	libhydra/hostfile/hydra_hostfile.c \
	libhydra/rmk/src/hydra_rmk.c libhydra/rmk/slurm/slurm_detect.c \
	libhydra/rmk/slurm/slurm_query_node_list.c \
	libhydra/rmk/ll/ll_detect.c \
	libhydra/rmk/ll/ll_query_node_list.c \
	libhydra/rmk/lsf/lsf_detect.c \
	libhydra/rmk/lsf/lsf_query_node_list.c \
	libhydra/rmk/sge/sge_detect.c \
	libhydra/rmk/sge/sge_query_node_list.c \
	libhydra/rmk/pbs/pbs_detect.c \
	libhydra/rmk/pbs/pbs_query_node_list.c \
	libhydra/rmk/cobalt/cobalt_detect.c \
	libhydra/rmk/cobalt/cobalt_query_node_list.c \
	libhydra/debugger/hydra_debugger.c
hydra_bstrap_proxy_SOURCES = \
	libhydra/bstrap/src/hydra_bstrap_proxy.c

hydra_bstrap_proxy_CFLAGS = $(AM_CFLAGS)
hydra_bstrap_proxy_LDFLAGS = $(external_ldflags) -L$(top_builddir)
hydra_bstrap_proxy_LDADD = -lhydra $(external_libs)
hydra_bstrap_proxy_DEPENDENCIES = libhydra.la

# External subdirs should be built first, as we might depend on them
SUBDIRS = ${external_subdirs} .
# see note in MPICH Makefile.am about our usage of DIST_SUBDIRS
DIST_SUBDIRS = ${external_dist_subdirs}

# "make V=1" support for our documentation recipes
doctextman_verbose = $(doctextman_verbose_$(V))
doctextman_verbose_ = $(doctextman_verbose_$(AM_DEFAULT_VERBOSITY))
doctextman_verbose_0 = @echo "   DOCTEXTMAN  " $@;
doctexthtml_verbose = $(doctexthtml_verbose_$(V))
doctexthtml_verbose_ = $(doctexthtml_verbose_$(AM_DEFAULT_VERBOSITY))
doctexthtml_verbose_0 = @echo "   DOCTEXTHTML  " $@;

# Build dir paths where the man pages will be created. Will usually be
# overridden by MPICH make.
mandoc_path1 = ${DESTDIR}${sharedir}/man/man1
mandoc_path3 = ${DESTDIR}${sharedir}/man/man3
htmldoc_path1 = ${DESTDIR}${sharedir}/www/www1
htmldoc_path3 = ${DESTDIR}${sharedir}/www/www3
doctext_docnotes = 
gcov_sources = $(libmpl_la_SOURCES)
all: all-recursive

.SUFFIXES:
.SUFFIXES: .man-phony .html-phony .man1-phony .html1-phony .txt .c .lo .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/mpiexec/Makefile.mk $(srcdir)/proxy/Makefile.mk $(srcdir)/common/Makefile.mk $(srcdir)/nameserver/Makefile.mk $(srcdir)/libhydra/Makefile.mk $(srcdir)/libhydra/arg/Makefile.mk $(srcdir)/libhydra/demux/Makefile.mk $(srcdir)/libhydra/env/Makefile.mk $(srcdir)/libhydra/exec/Makefile.mk $(srcdir)/libhydra/fs/Makefile.mk $(srcdir)/libhydra/include/Makefile.mk $(srcdir)/libhydra/mem/Makefile.mk $(srcdir)/libhydra/node/Makefile.mk $(srcdir)/libhydra/err/Makefile.mk $(srcdir)/libhydra/signal/Makefile.mk $(srcdir)/libhydra/sock/Makefile.mk $(srcdir)/libhydra/spawn/Makefile.mk $(srcdir)/libhydra/str/Makefile.mk $(srcdir)/libhydra/topo/Makefile.mk $(srcdir)/libhydra/topo/hwloc/Makefile.mk $(srcdir)/libhydra/tree/Makefile.mk $(srcdir)/libhydra/bstrap/Makefile.mk $(srcdir)/libhydra/bstrap/src/Makefile.mk $(srcdir)/libhydra/bstrap/ssh/Makefile.mk $(srcdir)/libhydra/bstrap/slurm/Makefile.mk $(srcdir)/libhydra/bstrap/rsh/Makefile.mk $(srcdir)/libhydra/bstrap/ll/Makefile.mk $(srcdir)/libhydra/bstrap/sge/Makefile.mk $(srcdir)/libhydra/hostfile/Makefile.mk $(srcdir)/libhydra/rmk/Makefile.mk $(srcdir)/libhydra/rmk/src/Makefile.mk $(srcdir)/libhydra/rmk/slurm/Makefile.mk $(srcdir)/libhydra/rmk/ll/Makefile.mk $(srcdir)/libhydra/rmk/lsf/Makefile.mk $(srcdir)/libhydra/rmk/sge/Makefile.mk $(srcdir)/libhydra/rmk/pbs/Makefile.mk $(srcdir)/libhydra/rmk/cobalt/Makefile.mk $(srcdir)/libhydra/hash/Makefile.mk $(srcdir)/libhydra/debugger/Makefile.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/mpiexec/Makefile.mk $(srcdir)/proxy/Makefile.mk $(srcdir)/common/Makefile.mk $(srcdir)/nameserver/Makefile.mk $(srcdir)/libhydra/Makefile.mk $(srcdir)/libhydra/arg/Makefile.mk $(srcdir)/libhydra/demux/Makefile.mk $(srcdir)/libhydra/env/Makefile.mk $(srcdir)/libhydra/exec/Makefile.mk $(srcdir)/libhydra/fs/Makefile.mk $(srcdir)/libhydra/include/Makefile.mk $(srcdir)/libhydra/mem/Makefile.mk $(srcdir)/libhydra/node/Makefile.mk $(srcdir)/libhydra/err/Makefile.mk $(srcdir)/libhydra/signal/Makefile.mk $(srcdir)/libhydra/sock/Makefile.mk $(srcdir)/libhydra/spawn/Makefile.mk $(srcdir)/libhydra/str/Makefile.mk $(srcdir)/libhydra/topo/Makefile.mk $(srcdir)/libhydra/topo/hwloc/Makefile.mk $(srcdir)/libhydra/tree/Makefile.mk $(srcdir)/libhydra/bstrap/Makefile.mk $(srcdir)/libhydra/bstrap/src/Makefile.mk $(srcdir)/libhydra/bstrap/ssh/Makefile.mk $(srcdir)/libhydra/bstrap/slurm/Makefile.mk $(srcdir)/libhydra/bstrap/rsh/Makefile.mk $(srcdir)/libhydra/bstrap/ll/Makefile.mk $(srcdir)/libhydra/bstrap/sge/Makefile.mk $(srcdir)/libhydra/hostfile/Makefile.mk $(srcdir)/libhydra/rmk/Makefile.mk $(srcdir)/libhydra/rmk/src/Makefile.mk $(srcdir)/libhydra/rmk/slurm/Makefile.mk $(srcdir)/libhydra/rmk/ll/Makefile.mk $(srcdir)/libhydra/rmk/lsf/Makefile.mk $(srcdir)/libhydra/rmk/sge/Makefile.mk $(srcdir)/libhydra/rmk/pbs/Makefile.mk $(srcdir)/libhydra/rmk/cobalt/Makefile.mk $(srcdir)/libhydra/hash/Makefile.mk $(srcdir)/libhydra/debugger/Makefile.mk $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

libhydra/include/hydra_config.h: libhydra/include/stamp-h1
	@test -f $@ || rm -f libhydra/include/stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) libhydra/include/stamp-h1

libhydra/include/stamp-h1: $(top_srcdir)/libhydra/include/hydra_config.h.in $(top_builddir)/config.status
	@rm -f libhydra/include/stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status libhydra/include/hydra_config.h
$(top_srcdir)/libhydra/include/hydra_config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f libhydra/include/stamp-h1
	touch $@

libhydra/topo/hwloc/hwloc/include/private/autogen/config.h: libhydra/topo/hwloc/hwloc/include/private/autogen/stamp-h2
	@test -f $@ || rm -f libhydra/topo/hwloc/hwloc/include/private/autogen/stamp-h2
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) libhydra/topo/hwloc/hwloc/include/private/autogen/stamp-h2

libhydra/topo/hwloc/hwloc/include/private/autogen/stamp-h2: $(top_srcdir)/libhydra/topo/hwloc/hwloc/include/private/autogen/config.h.in $(top_builddir)/config.status
	@rm -f libhydra/topo/hwloc/hwloc/include/private/autogen/stamp-h2
	cd $(top_builddir) && $(SHELL) ./config.status libhydra/topo/hwloc/hwloc/include/private/autogen/config.h

libhydra/topo/hwloc/hwloc/include/hwloc/autogen/config.h: libhydra/topo/hwloc/hwloc/include/hwloc/autogen/stamp-h3
	@test -f $@ || rm -f libhydra/topo/hwloc/hwloc/include/hwloc/autogen/stamp-h3
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) libhydra/topo/hwloc/hwloc/include/hwloc/autogen/stamp-h3

libhydra/topo/hwloc/hwloc/include/hwloc/autogen/stamp-h3: $(top_srcdir)/libhydra/topo/hwloc/hwloc/include/hwloc/autogen/config.h.in $(top_builddir)/config.status
	@rm -f libhydra/topo/hwloc/hwloc/include/hwloc/autogen/stamp-h3
	cd $(top_builddir) && $(SHELL) ./config.status libhydra/topo/hwloc/hwloc/include/hwloc/autogen/config.h

distclean-hdr:
	-rm -f libhydra/include/hydra_config.h libhydra/include/stamp-h1 libhydra/topo/hwloc/hwloc/include/private/autogen/config.h libhydra/topo/hwloc/hwloc/include/private/autogen/stamp-h2 libhydra/topo/hwloc/hwloc/include/hwloc/autogen/config.h libhydra/topo/hwloc/hwloc/include/hwloc/autogen/stamp-h3
libhydra/rmk/src/hydra_rmk.c: $(top_builddir)/config.status $(top_srcdir)/libhydra/rmk/src/hydra_rmk.c.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
libhydra/bstrap/src/hydra_bstrap.c: $(top_builddir)/config.status $(top_srcdir)/libhydra/bstrap/src/hydra_bstrap.c.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
hydra-doxygen.cfg: $(top_builddir)/config.status $(srcdir)/hydra-doxygen.cfg.in
	cd $(top_builddir) && $(SHELL) ./config.status $@

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
libhydra/arg/$(am__dirstamp):
	@$(MKDIR_P) libhydra/arg
	@: > libhydra/arg/$(am__dirstamp)
libhydra/arg/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/arg/$(DEPDIR)
	@: > libhydra/arg/$(DEPDIR)/$(am__dirstamp)
libhydra/arg/hydra_arg.lo: libhydra/arg/$(am__dirstamp) \
	libhydra/arg/$(DEPDIR)/$(am__dirstamp)
libhydra/demux/$(am__dirstamp):
	@$(MKDIR_P) libhydra/demux
	@: > libhydra/demux/$(am__dirstamp)
libhydra/demux/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/demux/$(DEPDIR)
	@: > libhydra/demux/$(DEPDIR)/$(am__dirstamp)
libhydra/demux/hydra_demux.lo: libhydra/demux/$(am__dirstamp) \
	libhydra/demux/$(DEPDIR)/$(am__dirstamp)
libhydra/demux/hydra_demux_internal.lo:  \
	libhydra/demux/$(am__dirstamp) \
	libhydra/demux/$(DEPDIR)/$(am__dirstamp)
libhydra/demux/hydra_demux_splice.lo: libhydra/demux/$(am__dirstamp) \
	libhydra/demux/$(DEPDIR)/$(am__dirstamp)
libhydra/demux/hydra_demux_poll.lo: libhydra/demux/$(am__dirstamp) \
	libhydra/demux/$(DEPDIR)/$(am__dirstamp)
libhydra/demux/hydra_demux_select.lo: libhydra/demux/$(am__dirstamp) \
	libhydra/demux/$(DEPDIR)/$(am__dirstamp)
libhydra/env/$(am__dirstamp):
	@$(MKDIR_P) libhydra/env
	@: > libhydra/env/$(am__dirstamp)
libhydra/env/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/env/$(DEPDIR)
	@: > libhydra/env/$(DEPDIR)/$(am__dirstamp)
libhydra/env/hydra_env.lo: libhydra/env/$(am__dirstamp) \
	libhydra/env/$(DEPDIR)/$(am__dirstamp)
libhydra/exec/$(am__dirstamp):
	@$(MKDIR_P) libhydra/exec
	@: > libhydra/exec/$(am__dirstamp)
libhydra/exec/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/exec/$(DEPDIR)
	@: > libhydra/exec/$(DEPDIR)/$(am__dirstamp)
libhydra/exec/hydra_exec.lo: libhydra/exec/$(am__dirstamp) \
	libhydra/exec/$(DEPDIR)/$(am__dirstamp)
libhydra/fs/$(am__dirstamp):
	@$(MKDIR_P) libhydra/fs
	@: > libhydra/fs/$(am__dirstamp)
libhydra/fs/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/fs/$(DEPDIR)
	@: > libhydra/fs/$(DEPDIR)/$(am__dirstamp)
libhydra/fs/hydra_fs.lo: libhydra/fs/$(am__dirstamp) \
	libhydra/fs/$(DEPDIR)/$(am__dirstamp)
libhydra/node/$(am__dirstamp):
	@$(MKDIR_P) libhydra/node
	@: > libhydra/node/$(am__dirstamp)
libhydra/node/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/node/$(DEPDIR)
	@: > libhydra/node/$(DEPDIR)/$(am__dirstamp)
libhydra/node/hydra_node.lo: libhydra/node/$(am__dirstamp) \
	libhydra/node/$(DEPDIR)/$(am__dirstamp)
libhydra/err/$(am__dirstamp):
	@$(MKDIR_P) libhydra/err
	@: > libhydra/err/$(am__dirstamp)
libhydra/err/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/err/$(DEPDIR)
	@: > libhydra/err/$(DEPDIR)/$(am__dirstamp)
libhydra/err/hydra_err.lo: libhydra/err/$(am__dirstamp) \
	libhydra/err/$(DEPDIR)/$(am__dirstamp)
libhydra/signal/$(am__dirstamp):
	@$(MKDIR_P) libhydra/signal
	@: > libhydra/signal/$(am__dirstamp)
libhydra/signal/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/signal/$(DEPDIR)
	@: > libhydra/signal/$(DEPDIR)/$(am__dirstamp)
libhydra/signal/hydra_signal.lo: libhydra/signal/$(am__dirstamp) \
	libhydra/signal/$(DEPDIR)/$(am__dirstamp)
libhydra/sock/$(am__dirstamp):
	@$(MKDIR_P) libhydra/sock
	@: > libhydra/sock/$(am__dirstamp)
libhydra/sock/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/sock/$(DEPDIR)
	@: > libhydra/sock/$(DEPDIR)/$(am__dirstamp)
libhydra/sock/hydra_sock.lo: libhydra/sock/$(am__dirstamp) \
	libhydra/sock/$(DEPDIR)/$(am__dirstamp)
libhydra/spawn/$(am__dirstamp):
	@$(MKDIR_P) libhydra/spawn
	@: > libhydra/spawn/$(am__dirstamp)
libhydra/spawn/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/spawn/$(DEPDIR)
	@: > libhydra/spawn/$(DEPDIR)/$(am__dirstamp)
libhydra/spawn/hydra_spawn.lo: libhydra/spawn/$(am__dirstamp) \
	libhydra/spawn/$(DEPDIR)/$(am__dirstamp)
libhydra/str/$(am__dirstamp):
	@$(MKDIR_P) libhydra/str
	@: > libhydra/str/$(am__dirstamp)
libhydra/str/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/str/$(DEPDIR)
	@: > libhydra/str/$(DEPDIR)/$(am__dirstamp)
libhydra/str/hydra_str.lo: libhydra/str/$(am__dirstamp) \
	libhydra/str/$(DEPDIR)/$(am__dirstamp)
libhydra/topo/$(am__dirstamp):
	@$(MKDIR_P) libhydra/topo
	@: > libhydra/topo/$(am__dirstamp)
libhydra/topo/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/topo/$(DEPDIR)
	@: > libhydra/topo/$(DEPDIR)/$(am__dirstamp)
libhydra/topo/hydra_topo.lo: libhydra/topo/$(am__dirstamp) \
	libhydra/topo/$(DEPDIR)/$(am__dirstamp)
libhydra/topo/hwloc/$(am__dirstamp):
	@$(MKDIR_P) libhydra/topo/hwloc
	@: > libhydra/topo/hwloc/$(am__dirstamp)
libhydra/topo/hwloc/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/topo/hwloc/$(DEPDIR)
	@: > libhydra/topo/hwloc/$(DEPDIR)/$(am__dirstamp)
libhydra/topo/hwloc/hydra_topo_hwloc.lo:  \
	libhydra/topo/hwloc/$(am__dirstamp) \
	libhydra/topo/hwloc/$(DEPDIR)/$(am__dirstamp)
libhydra/tree/$(am__dirstamp):
	@$(MKDIR_P) libhydra/tree
	@: > libhydra/tree/$(am__dirstamp)
libhydra/tree/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/tree/$(DEPDIR)
	@: > libhydra/tree/$(DEPDIR)/$(am__dirstamp)
libhydra/tree/hydra_tree.lo: libhydra/tree/$(am__dirstamp) \
	libhydra/tree/$(DEPDIR)/$(am__dirstamp)
libhydra/bstrap/src/$(am__dirstamp):
	@$(MKDIR_P) libhydra/bstrap/src
	@: > libhydra/bstrap/src/$(am__dirstamp)
libhydra/bstrap/src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/bstrap/src/$(DEPDIR)
	@: > libhydra/bstrap/src/$(DEPDIR)/$(am__dirstamp)
libhydra/bstrap/src/hydra_bstrap.lo:  \
	libhydra/bstrap/src/$(am__dirstamp) \
	libhydra/bstrap/src/$(DEPDIR)/$(am__dirstamp)
libhydra/bstrap/ssh/$(am__dirstamp):
	@$(MKDIR_P) libhydra/bstrap/ssh
	@: > libhydra/bstrap/ssh/$(am__dirstamp)
libhydra/bstrap/ssh/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/bstrap/ssh/$(DEPDIR)
	@: > libhydra/bstrap/ssh/$(DEPDIR)/$(am__dirstamp)
libhydra/bstrap/ssh/ssh_internal.lo:  \
	libhydra/bstrap/ssh/$(am__dirstamp) \
	libhydra/bstrap/ssh/$(DEPDIR)/$(am__dirstamp)
libhydra/bstrap/ssh/ssh_launch.lo:  \
	libhydra/bstrap/ssh/$(am__dirstamp) \
	libhydra/bstrap/ssh/$(DEPDIR)/$(am__dirstamp)
libhydra/bstrap/ssh/ssh_finalize.lo:  \
	libhydra/bstrap/ssh/$(am__dirstamp) \
	libhydra/bstrap/ssh/$(DEPDIR)/$(am__dirstamp)
libhydra/bstrap/slurm/$(am__dirstamp):
	@$(MKDIR_P) libhydra/bstrap/slurm
	@: > libhydra/bstrap/slurm/$(am__dirstamp)
libhydra/bstrap/slurm/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/bstrap/slurm/$(DEPDIR)
	@: > libhydra/bstrap/slurm/$(DEPDIR)/$(am__dirstamp)
libhydra/bstrap/slurm/slurm_launch.lo:  \
	libhydra/bstrap/slurm/$(am__dirstamp) \
	libhydra/bstrap/slurm/$(DEPDIR)/$(am__dirstamp)
libhydra/bstrap/slurm/slurm_finalize.lo:  \
	libhydra/bstrap/slurm/$(am__dirstamp) \
	libhydra/bstrap/slurm/$(DEPDIR)/$(am__dirstamp)
libhydra/bstrap/rsh/$(am__dirstamp):
	@$(MKDIR_P) libhydra/bstrap/rsh
	@: > libhydra/bstrap/rsh/$(am__dirstamp)
libhydra/bstrap/rsh/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/bstrap/rsh/$(DEPDIR)
	@: > libhydra/bstrap/rsh/$(DEPDIR)/$(am__dirstamp)
libhydra/bstrap/rsh/rsh_launch.lo:  \
	libhydra/bstrap/rsh/$(am__dirstamp) \
	libhydra/bstrap/rsh/$(DEPDIR)/$(am__dirstamp)
libhydra/bstrap/rsh/rsh_finalize.lo:  \
	libhydra/bstrap/rsh/$(am__dirstamp) \
	libhydra/bstrap/rsh/$(DEPDIR)/$(am__dirstamp)
libhydra/bstrap/ll/$(am__dirstamp):
	@$(MKDIR_P) libhydra/bstrap/ll
	@: > libhydra/bstrap/ll/$(am__dirstamp)
libhydra/bstrap/ll/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/bstrap/ll/$(DEPDIR)
	@: > libhydra/bstrap/ll/$(DEPDIR)/$(am__dirstamp)
libhydra/bstrap/ll/ll_launch.lo: libhydra/bstrap/ll/$(am__dirstamp) \
	libhydra/bstrap/ll/$(DEPDIR)/$(am__dirstamp)
libhydra/bstrap/ll/ll_finalize.lo: libhydra/bstrap/ll/$(am__dirstamp) \
	libhydra/bstrap/ll/$(DEPDIR)/$(am__dirstamp)
libhydra/bstrap/sge/$(am__dirstamp):
	@$(MKDIR_P) libhydra/bstrap/sge
	@: > libhydra/bstrap/sge/$(am__dirstamp)
libhydra/bstrap/sge/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/bstrap/sge/$(DEPDIR)
	@: > libhydra/bstrap/sge/$(DEPDIR)/$(am__dirstamp)
libhydra/bstrap/sge/sge_launch.lo:  \
	libhydra/bstrap/sge/$(am__dirstamp) \
	libhydra/bstrap/sge/$(DEPDIR)/$(am__dirstamp)
libhydra/bstrap/sge/sge_finalize.lo:  \
	libhydra/bstrap/sge/$(am__dirstamp) \
	libhydra/bstrap/sge/$(DEPDIR)/$(am__dirstamp)
libhydra/hostfile/$(am__dirstamp):
	@$(MKDIR_P) libhydra/hostfile
	@: > libhydra/hostfile/$(am__dirstamp)
libhydra/hostfile/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/hostfile/$(DEPDIR)
	@: > libhydra/hostfile/$(DEPDIR)/$(am__dirstamp)
libhydra/hostfile/hydra_hostfile.lo:  \
	libhydra/hostfile/$(am__dirstamp) \
	libhydra/hostfile/$(DEPDIR)/$(am__dirstamp)
libhydra/rmk/src/$(am__dirstamp):
	@$(MKDIR_P) libhydra/rmk/src
	@: > libhydra/rmk/src/$(am__dirstamp)
libhydra/rmk/src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/rmk/src/$(DEPDIR)
	@: > libhydra/rmk/src/$(DEPDIR)/$(am__dirstamp)
libhydra/rmk/src/hydra_rmk.lo: libhydra/rmk/src/$(am__dirstamp) \
	libhydra/rmk/src/$(DEPDIR)/$(am__dirstamp)
libhydra/rmk/slurm/$(am__dirstamp):
	@$(MKDIR_P) libhydra/rmk/slurm
	@: > libhydra/rmk/slurm/$(am__dirstamp)
libhydra/rmk/slurm/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/rmk/slurm/$(DEPDIR)
	@: > libhydra/rmk/slurm/$(DEPDIR)/$(am__dirstamp)
libhydra/rmk/slurm/slurm_detect.lo:  \
	libhydra/rmk/slurm/$(am__dirstamp) \
	libhydra/rmk/slurm/$(DEPDIR)/$(am__dirstamp)
libhydra/rmk/slurm/slurm_query_node_list.lo:  \
	libhydra/rmk/slurm/$(am__dirstamp) \
	libhydra/rmk/slurm/$(DEPDIR)/$(am__dirstamp)
libhydra/rmk/ll/$(am__dirstamp):
	@$(MKDIR_P) libhydra/rmk/ll
	@: > libhydra/rmk/ll/$(am__dirstamp)
libhydra/rmk/ll/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/rmk/ll/$(DEPDIR)
	@: > libhydra/rmk/ll/$(DEPDIR)/$(am__dirstamp)
libhydra/rmk/ll/ll_detect.lo: libhydra/rmk/ll/$(am__dirstamp) \
	libhydra/rmk/ll/$(DEPDIR)/$(am__dirstamp)
libhydra/rmk/ll/ll_query_node_list.lo:  \
	libhydra/rmk/ll/$(am__dirstamp) \
	libhydra/rmk/ll/$(DEPDIR)/$(am__dirstamp)
libhydra/rmk/lsf/$(am__dirstamp):
	@$(MKDIR_P) libhydra/rmk/lsf
	@: > libhydra/rmk/lsf/$(am__dirstamp)
libhydra/rmk/lsf/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/rmk/lsf/$(DEPDIR)
	@: > libhydra/rmk/lsf/$(DEPDIR)/$(am__dirstamp)
libhydra/rmk/lsf/lsf_detect.lo: libhydra/rmk/lsf/$(am__dirstamp) \
	libhydra/rmk/lsf/$(DEPDIR)/$(am__dirstamp)
libhydra/rmk/lsf/lsf_query_node_list.lo:  \
	libhydra/rmk/lsf/$(am__dirstamp) \
	libhydra/rmk/lsf/$(DEPDIR)/$(am__dirstamp)
libhydra/rmk/sge/$(am__dirstamp):
	@$(MKDIR_P) libhydra/rmk/sge
	@: > libhydra/rmk/sge/$(am__dirstamp)
libhydra/rmk/sge/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/rmk/sge/$(DEPDIR)
	@: > libhydra/rmk/sge/$(DEPDIR)/$(am__dirstamp)
libhydra/rmk/sge/sge_detect.lo: libhydra/rmk/sge/$(am__dirstamp) \
	libhydra/rmk/sge/$(DEPDIR)/$(am__dirstamp)
libhydra/rmk/sge/sge_query_node_list.lo:  \
	libhydra/rmk/sge/$(am__dirstamp) \
	libhydra/rmk/sge/$(DEPDIR)/$(am__dirstamp)
libhydra/rmk/pbs/$(am__dirstamp):
	@$(MKDIR_P) libhydra/rmk/pbs
	@: > libhydra/rmk/pbs/$(am__dirstamp)
libhydra/rmk/pbs/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/rmk/pbs/$(DEPDIR)
	@: > libhydra/rmk/pbs/$(DEPDIR)/$(am__dirstamp)
libhydra/rmk/pbs/pbs_detect.lo: libhydra/rmk/pbs/$(am__dirstamp) \
	libhydra/rmk/pbs/$(DEPDIR)/$(am__dirstamp)
libhydra/rmk/pbs/pbs_query_node_list.lo:  \
	libhydra/rmk/pbs/$(am__dirstamp) \
	libhydra/rmk/pbs/$(DEPDIR)/$(am__dirstamp)
libhydra/rmk/cobalt/$(am__dirstamp):
	@$(MKDIR_P) libhydra/rmk/cobalt
	@: > libhydra/rmk/cobalt/$(am__dirstamp)
libhydra/rmk/cobalt/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/rmk/cobalt/$(DEPDIR)
	@: > libhydra/rmk/cobalt/$(DEPDIR)/$(am__dirstamp)
libhydra/rmk/cobalt/cobalt_detect.lo:  \
	libhydra/rmk/cobalt/$(am__dirstamp) \
	libhydra/rmk/cobalt/$(DEPDIR)/$(am__dirstamp)
libhydra/rmk/cobalt/cobalt_query_node_list.lo:  \
	libhydra/rmk/cobalt/$(am__dirstamp) \
	libhydra/rmk/cobalt/$(DEPDIR)/$(am__dirstamp)
libhydra/debugger/$(am__dirstamp):
	@$(MKDIR_P) libhydra/debugger
	@: > libhydra/debugger/$(am__dirstamp)
libhydra/debugger/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) libhydra/debugger/$(DEPDIR)
	@: > libhydra/debugger/$(DEPDIR)/$(am__dirstamp)
libhydra/debugger/hydra_debugger.lo:  \
	libhydra/debugger/$(am__dirstamp) \
	libhydra/debugger/$(DEPDIR)/$(am__dirstamp)

libhydra.la: $(libhydra_la_OBJECTS) $(libhydra_la_DEPENDENCIES) $(EXTRA_libhydra_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK)  $(libhydra_la_OBJECTS) $(libhydra_la_LIBADD) $(LIBS)
common/$(am__dirstamp):
	@$(MKDIR_P) common
	@: > common/$(am__dirstamp)
common/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) common/$(DEPDIR)
	@: > common/$(DEPDIR)/$(am__dirstamp)
common/mpx_bcast.lo: common/$(am__dirstamp) \
	common/$(DEPDIR)/$(am__dirstamp)
common/mpx_env.lo: common/$(am__dirstamp) \
	common/$(DEPDIR)/$(am__dirstamp)

libmpx.la: $(libmpx_la_OBJECTS) $(libmpx_la_DEPENDENCIES) $(EXTRA_libmpx_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK)  $(libmpx_la_OBJECTS) $(libmpx_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
libhydra/bstrap/src/hydra_bstrap_proxy-hydra_bstrap_proxy.$(OBJEXT):  \
	libhydra/bstrap/src/$(am__dirstamp) \
	libhydra/bstrap/src/$(DEPDIR)/$(am__dirstamp)

hydra_bstrap_proxy$(EXEEXT): $(hydra_bstrap_proxy_OBJECTS) $(hydra_bstrap_proxy_DEPENDENCIES) $(EXTRA_hydra_bstrap_proxy_DEPENDENCIES) 
	@rm -f hydra_bstrap_proxy$(EXEEXT)
	$(AM_V_CCLD)$(hydra_bstrap_proxy_LINK) $(hydra_bstrap_proxy_OBJECTS) $(hydra_bstrap_proxy_LDADD) $(LIBS)
nameserver/$(am__dirstamp):
	@$(MKDIR_P) nameserver
	@: > nameserver/$(am__dirstamp)
nameserver/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) nameserver/$(DEPDIR)
	@: > nameserver/$(DEPDIR)/$(am__dirstamp)
nameserver/hydra_nameserver-hydra_nameserver.$(OBJEXT):  \
	nameserver/$(am__dirstamp) \
	nameserver/$(DEPDIR)/$(am__dirstamp)

hydra_nameserver$(EXEEXT): $(hydra_nameserver_OBJECTS) $(hydra_nameserver_DEPENDENCIES) $(EXTRA_hydra_nameserver_DEPENDENCIES) 
	@rm -f hydra_nameserver$(EXEEXT)
	$(AM_V_CCLD)$(hydra_nameserver_LINK) $(hydra_nameserver_OBJECTS) $(hydra_nameserver_LDADD) $(LIBS)
proxy/$(am__dirstamp):
	@$(MKDIR_P) proxy
	@: > proxy/$(am__dirstamp)
proxy/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) proxy/$(DEPDIR)
	@: > proxy/$(DEPDIR)/$(am__dirstamp)
proxy/hydra_pmi_proxy-proxy.$(OBJEXT): proxy/$(am__dirstamp) \
	proxy/$(DEPDIR)/$(am__dirstamp)
proxy/hydra_pmi_proxy-proxy_cb.$(OBJEXT): proxy/$(am__dirstamp) \
	proxy/$(DEPDIR)/$(am__dirstamp)
proxy/hydra_pmi_proxy-proxy_pmi.$(OBJEXT): proxy/$(am__dirstamp) \
	proxy/$(DEPDIR)/$(am__dirstamp)
proxy/hydra_pmi_proxy-proxy_pmi_cb.$(OBJEXT): proxy/$(am__dirstamp) \
	proxy/$(DEPDIR)/$(am__dirstamp)

hydra_pmi_proxy$(EXEEXT): $(hydra_pmi_proxy_OBJECTS) $(hydra_pmi_proxy_DEPENDENCIES) $(EXTRA_hydra_pmi_proxy_DEPENDENCIES) 
	@rm -f hydra_pmi_proxy$(EXEEXT)
	$(AM_V_CCLD)$(hydra_pmi_proxy_LINK) $(hydra_pmi_proxy_OBJECTS) $(hydra_pmi_proxy_LDADD) $(LIBS)
mpiexec/$(am__dirstamp):
	@$(MKDIR_P) mpiexec
	@: > mpiexec/$(am__dirstamp)
mpiexec/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) mpiexec/$(DEPDIR)
	@: > mpiexec/$(DEPDIR)/$(am__dirstamp)
mpiexec/mpiexec.$(OBJEXT): mpiexec/$(am__dirstamp) \
	mpiexec/$(DEPDIR)/$(am__dirstamp)
mpiexec/mpiexec_params.$(OBJEXT): mpiexec/$(am__dirstamp) \
	mpiexec/$(DEPDIR)/$(am__dirstamp)
mpiexec/mpiexec_pmi.$(OBJEXT): mpiexec/$(am__dirstamp) \
	mpiexec/$(DEPDIR)/$(am__dirstamp)
mpiexec/mpiexec_utils.$(OBJEXT): mpiexec/$(am__dirstamp) \
	mpiexec/$(DEPDIR)/$(am__dirstamp)

mpiexec.hydra$(EXEEXT): $(mpiexec_hydra_OBJECTS) $(mpiexec_hydra_DEPENDENCIES) $(EXTRA_mpiexec_hydra_DEPENDENCIES) 
	@rm -f mpiexec.hydra$(EXEEXT)
	$(AM_V_CCLD)$(mpiexec_hydra_LINK) $(mpiexec_hydra_OBJECTS) $(mpiexec_hydra_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f common/*.$(OBJEXT)
	-rm -f common/*.lo
	-rm -f libhydra/arg/*.$(OBJEXT)
	-rm -f libhydra/arg/*.lo
	-rm -f libhydra/bstrap/ll/*.$(OBJEXT)
	-rm -f libhydra/bstrap/ll/*.lo
	-rm -f libhydra/bstrap/rsh/*.$(OBJEXT)
	-rm -f libhydra/bstrap/rsh/*.lo
	-rm -f libhydra/bstrap/sge/*.$(OBJEXT)
	-rm -f libhydra/bstrap/sge/*.lo
	-rm -f libhydra/bstrap/slurm/*.$(OBJEXT)
	-rm -f libhydra/bstrap/slurm/*.lo
	-rm -f libhydra/bstrap/src/*.$(OBJEXT)
	-rm -f libhydra/bstrap/src/*.lo
	-rm -f libhydra/bstrap/ssh/*.$(OBJEXT)
	-rm -f libhydra/bstrap/ssh/*.lo
	-rm -f libhydra/debugger/*.$(OBJEXT)
	-rm -f libhydra/debugger/*.lo
	-rm -f libhydra/demux/*.$(OBJEXT)
	-rm -f libhydra/demux/*.lo
	-rm -f libhydra/env/*.$(OBJEXT)
	-rm -f libhydra/env/*.lo
	-rm -f libhydra/err/*.$(OBJEXT)
	-rm -f libhydra/err/*.lo
	-rm -f libhydra/exec/*.$(OBJEXT)
	-rm -f libhydra/exec/*.lo
	-rm -f libhydra/fs/*.$(OBJEXT)
	-rm -f libhydra/fs/*.lo
	-rm -f libhydra/hostfile/*.$(OBJEXT)
	-rm -f libhydra/hostfile/*.lo
	-rm -f libhydra/node/*.$(OBJEXT)
	-rm -f libhydra/node/*.lo
	-rm -f libhydra/rmk/cobalt/*.$(OBJEXT)
	-rm -f libhydra/rmk/cobalt/*.lo
	-rm -f libhydra/rmk/ll/*.$(OBJEXT)
	-rm -f libhydra/rmk/ll/*.lo
	-rm -f libhydra/rmk/lsf/*.$(OBJEXT)
	-rm -f libhydra/rmk/lsf/*.lo
	-rm -f libhydra/rmk/pbs/*.$(OBJEXT)
	-rm -f libhydra/rmk/pbs/*.lo
	-rm -f libhydra/rmk/sge/*.$(OBJEXT)
	-rm -f libhydra/rmk/sge/*.lo
	-rm -f libhydra/rmk/slurm/*.$(OBJEXT)
	-rm -f libhydra/rmk/slurm/*.lo
	-rm -f libhydra/rmk/src/*.$(OBJEXT)
	-rm -f libhydra/rmk/src/*.lo
	-rm -f libhydra/signal/*.$(OBJEXT)
	-rm -f libhydra/signal/*.lo
	-rm -f libhydra/sock/*.$(OBJEXT)
	-rm -f libhydra/sock/*.lo
	-rm -f libhydra/spawn/*.$(OBJEXT)
	-rm -f libhydra/spawn/*.lo
	-rm -f libhydra/str/*.$(OBJEXT)
	-rm -f libhydra/str/*.lo
	-rm -f libhydra/topo/*.$(OBJEXT)
	-rm -f libhydra/topo/*.lo
	-rm -f libhydra/topo/hwloc/*.$(OBJEXT)
	-rm -f libhydra/topo/hwloc/*.lo
	-rm -f libhydra/tree/*.$(OBJEXT)
	-rm -f libhydra/tree/*.lo
	-rm -f mpiexec/*.$(OBJEXT)
	-rm -f nameserver/*.$(OBJEXT)
	-rm -f proxy/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@common/$(DEPDIR)/mpx_bcast.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@common/$(DEPDIR)/mpx_env.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/arg/$(DEPDIR)/hydra_arg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/bstrap/ll/$(DEPDIR)/ll_finalize.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/bstrap/ll/$(DEPDIR)/ll_launch.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/bstrap/rsh/$(DEPDIR)/rsh_finalize.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/bstrap/rsh/$(DEPDIR)/rsh_launch.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/bstrap/sge/$(DEPDIR)/sge_finalize.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/bstrap/sge/$(DEPDIR)/sge_launch.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/bstrap/slurm/$(DEPDIR)/slurm_finalize.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/bstrap/slurm/$(DEPDIR)/slurm_launch.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/bstrap/src/$(DEPDIR)/hydra_bstrap.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/bstrap/src/$(DEPDIR)/hydra_bstrap_proxy-hydra_bstrap_proxy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/bstrap/ssh/$(DEPDIR)/ssh_finalize.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/bstrap/ssh/$(DEPDIR)/ssh_internal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/bstrap/ssh/$(DEPDIR)/ssh_launch.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/debugger/$(DEPDIR)/hydra_debugger.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/demux/$(DEPDIR)/hydra_demux.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/demux/$(DEPDIR)/hydra_demux_internal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/demux/$(DEPDIR)/hydra_demux_poll.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/demux/$(DEPDIR)/hydra_demux_select.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/demux/$(DEPDIR)/hydra_demux_splice.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/env/$(DEPDIR)/hydra_env.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/err/$(DEPDIR)/hydra_err.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/exec/$(DEPDIR)/hydra_exec.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/fs/$(DEPDIR)/hydra_fs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/hostfile/$(DEPDIR)/hydra_hostfile.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/node/$(DEPDIR)/hydra_node.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/rmk/cobalt/$(DEPDIR)/cobalt_detect.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/rmk/cobalt/$(DEPDIR)/cobalt_query_node_list.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/rmk/ll/$(DEPDIR)/ll_detect.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/rmk/ll/$(DEPDIR)/ll_query_node_list.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/rmk/lsf/$(DEPDIR)/lsf_detect.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/rmk/lsf/$(DEPDIR)/lsf_query_node_list.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/rmk/pbs/$(DEPDIR)/pbs_detect.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/rmk/pbs/$(DEPDIR)/pbs_query_node_list.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/rmk/sge/$(DEPDIR)/sge_detect.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/rmk/sge/$(DEPDIR)/sge_query_node_list.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/rmk/slurm/$(DEPDIR)/slurm_detect.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/rmk/slurm/$(DEPDIR)/slurm_query_node_list.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/rmk/src/$(DEPDIR)/hydra_rmk.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/signal/$(DEPDIR)/hydra_signal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/sock/$(DEPDIR)/hydra_sock.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/spawn/$(DEPDIR)/hydra_spawn.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/str/$(DEPDIR)/hydra_str.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/topo/$(DEPDIR)/hydra_topo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/topo/hwloc/$(DEPDIR)/hydra_topo_hwloc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@libhydra/tree/$(DEPDIR)/hydra_tree.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@mpiexec/$(DEPDIR)/mpiexec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@mpiexec/$(DEPDIR)/mpiexec_params.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@mpiexec/$(DEPDIR)/mpiexec_pmi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@mpiexec/$(DEPDIR)/mpiexec_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@nameserver/$(DEPDIR)/hydra_nameserver-hydra_nameserver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@proxy/$(DEPDIR)/hydra_pmi_proxy-proxy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@proxy/$(DEPDIR)/hydra_pmi_proxy-proxy_cb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@proxy/$(DEPDIR)/hydra_pmi_proxy-proxy_pmi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@proxy/$(DEPDIR)/hydra_pmi_proxy-proxy_pmi_cb.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

libhydra/bstrap/src/hydra_bstrap_proxy-hydra_bstrap_proxy.o: libhydra/bstrap/src/hydra_bstrap_proxy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hydra_bstrap_proxy_CFLAGS) $(CFLAGS) -MT libhydra/bstrap/src/hydra_bstrap_proxy-hydra_bstrap_proxy.o -MD -MP -MF libhydra/bstrap/src/$(DEPDIR)/hydra_bstrap_proxy-hydra_bstrap_proxy.Tpo -c -o libhydra/bstrap/src/hydra_bstrap_proxy-hydra_bstrap_proxy.o `test -f 'libhydra/bstrap/src/hydra_bstrap_proxy.c' || echo '$(srcdir)/'`libhydra/bstrap/src/hydra_bstrap_proxy.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) libhydra/bstrap/src/$(DEPDIR)/hydra_bstrap_proxy-hydra_bstrap_proxy.Tpo libhydra/bstrap/src/$(DEPDIR)/hydra_bstrap_proxy-hydra_bstrap_proxy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='libhydra/bstrap/src/hydra_bstrap_proxy.c' object='libhydra/bstrap/src/hydra_bstrap_proxy-hydra_bstrap_proxy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hydra_bstrap_proxy_CFLAGS) $(CFLAGS) -c -o libhydra/bstrap/src/hydra_bstrap_proxy-hydra_bstrap_proxy.o `test -f 'libhydra/bstrap/src/hydra_bstrap_proxy.c' || echo '$(srcdir)/'`libhydra/bstrap/src/hydra_bstrap_proxy.c

libhydra/bstrap/src/hydra_bstrap_proxy-hydra_bstrap_proxy.obj: libhydra/bstrap/src/hydra_bstrap_proxy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hydra_bstrap_proxy_CFLAGS) $(CFLAGS) -MT libhydra/bstrap/src/hydra_bstrap_proxy-hydra_bstrap_proxy.obj -MD -MP -MF libhydra/bstrap/src/$(DEPDIR)/hydra_bstrap_proxy-hydra_bstrap_proxy.Tpo -c -o libhydra/bstrap/src/hydra_bstrap_proxy-hydra_bstrap_proxy.obj `if test -f 'libhydra/bstrap/src/hydra_bstrap_proxy.c'; then $(CYGPATH_W) 'libhydra/bstrap/src/hydra_bstrap_proxy.c'; else $(CYGPATH_W) '$(srcdir)/libhydra/bstrap/src/hydra_bstrap_proxy.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) libhydra/bstrap/src/$(DEPDIR)/hydra_bstrap_proxy-hydra_bstrap_proxy.Tpo libhydra/bstrap/src/$(DEPDIR)/hydra_bstrap_proxy-hydra_bstrap_proxy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='libhydra/bstrap/src/hydra_bstrap_proxy.c' object='libhydra/bstrap/src/hydra_bstrap_proxy-hydra_bstrap_proxy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hydra_bstrap_proxy_CFLAGS) $(CFLAGS) -c -o libhydra/bstrap/src/hydra_bstrap_proxy-hydra_bstrap_proxy.obj `if test -f 'libhydra/bstrap/src/hydra_bstrap_proxy.c'; then $(CYGPATH_W) 'libhydra/bstrap/src/hydra_bstrap_proxy.c'; else $(CYGPATH_W) '$(srcdir)/libhydra/bstrap/src/hydra_bstrap_proxy.c'; fi`

nameserver/hydra_nameserver-hydra_nameserver.o: nameserver/hydra_nameserver.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hydra_nameserver_CFLAGS) $(CFLAGS) -MT nameserver/hydra_nameserver-hydra_nameserver.o -MD -MP -MF nameserver/$(DEPDIR)/hydra_nameserver-hydra_nameserver.Tpo -c -o nameserver/hydra_nameserver-hydra_nameserver.o `test -f 'nameserver/hydra_nameserver.c' || echo '$(srcdir)/'`nameserver/hydra_nameserver.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) nameserver/$(DEPDIR)/hydra_nameserver-hydra_nameserver.Tpo nameserver/$(DEPDIR)/hydra_nameserver-hydra_nameserver.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='nameserver/hydra_nameserver.c' object='nameserver/hydra_nameserver-hydra_nameserver.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hydra_nameserver_CFLAGS) $(CFLAGS) -c -o nameserver/hydra_nameserver-hydra_nameserver.o `test -f 'nameserver/hydra_nameserver.c' || echo '$(srcdir)/'`nameserver/hydra_nameserver.c

nameserver/hydra_nameserver-hydra_nameserver.obj: nameserver/hydra_nameserver.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hydra_nameserver_CFLAGS) $(CFLAGS) -MT nameserver/hydra_nameserver-hydra_nameserver.obj -MD -MP -MF nameserver/$(DEPDIR)/hydra_nameserver-hydra_nameserver.Tpo -c -o nameserver/hydra_nameserver-hydra_nameserver.obj `if test -f 'nameserver/hydra_nameserver.c'; then $(CYGPATH_W) 'nameserver/hydra_nameserver.c'; else $(CYGPATH_W) '$(srcdir)/nameserver/hydra_nameserver.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) nameserver/$(DEPDIR)/hydra_nameserver-hydra_nameserver.Tpo nameserver/$(DEPDIR)/hydra_nameserver-hydra_nameserver.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='nameserver/hydra_nameserver.c' object='nameserver/hydra_nameserver-hydra_nameserver.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hydra_nameserver_CFLAGS) $(CFLAGS) -c -o nameserver/hydra_nameserver-hydra_nameserver.obj `if test -f 'nameserver/hydra_nameserver.c'; then $(CYGPATH_W) 'nameserver/hydra_nameserver.c'; else $(CYGPATH_W) '$(srcdir)/nameserver/hydra_nameserver.c'; fi`

proxy/hydra_pmi_proxy-proxy.o: proxy/proxy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hydra_pmi_proxy_CFLAGS) $(CFLAGS) -MT proxy/hydra_pmi_proxy-proxy.o -MD -MP -MF proxy/$(DEPDIR)/hydra_pmi_proxy-proxy.Tpo -c -o proxy/hydra_pmi_proxy-proxy.o `test -f 'proxy/proxy.c' || echo '$(srcdir)/'`proxy/proxy.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) proxy/$(DEPDIR)/hydra_pmi_proxy-proxy.Tpo proxy/$(DEPDIR)/hydra_pmi_proxy-proxy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='proxy/proxy.c' object='proxy/hydra_pmi_proxy-proxy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hydra_pmi_proxy_CFLAGS) $(CFLAGS) -c -o proxy/hydra_pmi_proxy-proxy.o `test -f 'proxy/proxy.c' || echo '$(srcdir)/'`proxy/proxy.c

proxy/hydra_pmi_proxy-proxy.obj: proxy/proxy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hydra_pmi_proxy_CFLAGS) $(CFLAGS) -MT proxy/hydra_pmi_proxy-proxy.obj -MD -MP -MF proxy/$(DEPDIR)/hydra_pmi_proxy-proxy.Tpo -c -o proxy/hydra_pmi_proxy-proxy.obj `if test -f 'proxy/proxy.c'; then $(CYGPATH_W) 'proxy/proxy.c'; else $(CYGPATH_W) '$(srcdir)/proxy/proxy.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) proxy/$(DEPDIR)/hydra_pmi_proxy-proxy.Tpo proxy/$(DEPDIR)/hydra_pmi_proxy-proxy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='proxy/proxy.c' object='proxy/hydra_pmi_proxy-proxy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hydra_pmi_proxy_CFLAGS) $(CFLAGS) -c -o proxy/hydra_pmi_proxy-proxy.obj `if test -f 'proxy/proxy.c'; then $(CYGPATH_W) 'proxy/proxy.c'; else $(CYGPATH_W) '$(srcdir)/proxy/proxy.c'; fi`

proxy/hydra_pmi_proxy-proxy_cb.o: proxy/proxy_cb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hydra_pmi_proxy_CFLAGS) $(CFLAGS) -MT proxy/hydra_pmi_proxy-proxy_cb.o -MD -MP -MF proxy/$(DEPDIR)/hydra_pmi_proxy-proxy_cb.Tpo -c -o proxy/hydra_pmi_proxy-proxy_cb.o `test -f 'proxy/proxy_cb.c' || echo '$(srcdir)/'`proxy/proxy_cb.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) proxy/$(DEPDIR)/hydra_pmi_proxy-proxy_cb.Tpo proxy/$(DEPDIR)/hydra_pmi_proxy-proxy_cb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='proxy/proxy_cb.c' object='proxy/hydra_pmi_proxy-proxy_cb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hydra_pmi_proxy_CFLAGS) $(CFLAGS) -c -o proxy/hydra_pmi_proxy-proxy_cb.o `test -f 'proxy/proxy_cb.c' || echo '$(srcdir)/'`proxy/proxy_cb.c

proxy/hydra_pmi_proxy-proxy_cb.obj: proxy/proxy_cb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hydra_pmi_proxy_CFLAGS) $(CFLAGS) -MT proxy/hydra_pmi_proxy-proxy_cb.obj -MD -MP -MF proxy/$(DEPDIR)/hydra_pmi_proxy-proxy_cb.Tpo -c -o proxy/hydra_pmi_proxy-proxy_cb.obj `if test -f 'proxy/proxy_cb.c'; then $(CYGPATH_W) 'proxy/proxy_cb.c'; else $(CYGPATH_W) '$(srcdir)/proxy/proxy_cb.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) proxy/$(DEPDIR)/hydra_pmi_proxy-proxy_cb.Tpo proxy/$(DEPDIR)/hydra_pmi_proxy-proxy_cb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='proxy/proxy_cb.c' object='proxy/hydra_pmi_proxy-proxy_cb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hydra_pmi_proxy_CFLAGS) $(CFLAGS) -c -o proxy/hydra_pmi_proxy-proxy_cb.obj `if test -f 'proxy/proxy_cb.c'; then $(CYGPATH_W) 'proxy/proxy_cb.c'; else $(CYGPATH_W) '$(srcdir)/proxy/proxy_cb.c'; fi`

proxy/hydra_pmi_proxy-proxy_pmi.o: proxy/proxy_pmi.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hydra_pmi_proxy_CFLAGS) $(CFLAGS) -MT proxy/hydra_pmi_proxy-proxy_pmi.o -MD -MP -MF proxy/$(DEPDIR)/hydra_pmi_proxy-proxy_pmi.Tpo -c -o proxy/hydra_pmi_proxy-proxy_pmi.o `test -f 'proxy/proxy_pmi.c' || echo '$(srcdir)/'`proxy/proxy_pmi.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) proxy/$(DEPDIR)/hydra_pmi_proxy-proxy_pmi.Tpo proxy/$(DEPDIR)/hydra_pmi_proxy-proxy_pmi.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='proxy/proxy_pmi.c' object='proxy/hydra_pmi_proxy-proxy_pmi.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hydra_pmi_proxy_CFLAGS) $(CFLAGS) -c -o proxy/hydra_pmi_proxy-proxy_pmi.o `test -f 'proxy/proxy_pmi.c' || echo '$(srcdir)/'`proxy/proxy_pmi.c

proxy/hydra_pmi_proxy-proxy_pmi.obj: proxy/proxy_pmi.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hydra_pmi_proxy_CFLAGS) $(CFLAGS) -MT proxy/hydra_pmi_proxy-proxy_pmi.obj -MD -MP -MF proxy/$(DEPDIR)/hydra_pmi_proxy-proxy_pmi.Tpo -c -o proxy/hydra_pmi_proxy-proxy_pmi.obj `if test -f 'proxy/proxy_pmi.c'; then $(CYGPATH_W) 'proxy/proxy_pmi.c'; else $(CYGPATH_W) '$(srcdir)/proxy/proxy_pmi.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) proxy/$(DEPDIR)/hydra_pmi_proxy-proxy_pmi.Tpo proxy/$(DEPDIR)/hydra_pmi_proxy-proxy_pmi.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='proxy/proxy_pmi.c' object='proxy/hydra_pmi_proxy-proxy_pmi.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hydra_pmi_proxy_CFLAGS) $(CFLAGS) -c -o proxy/hydra_pmi_proxy-proxy_pmi.obj `if test -f 'proxy/proxy_pmi.c'; then $(CYGPATH_W) 'proxy/proxy_pmi.c'; else $(CYGPATH_W) '$(srcdir)/proxy/proxy_pmi.c'; fi`

proxy/hydra_pmi_proxy-proxy_pmi_cb.o: proxy/proxy_pmi_cb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hydra_pmi_proxy_CFLAGS) $(CFLAGS) -MT proxy/hydra_pmi_proxy-proxy_pmi_cb.o -MD -MP -MF proxy/$(DEPDIR)/hydra_pmi_proxy-proxy_pmi_cb.Tpo -c -o proxy/hydra_pmi_proxy-proxy_pmi_cb.o `test -f 'proxy/proxy_pmi_cb.c' || echo '$(srcdir)/'`proxy/proxy_pmi_cb.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) proxy/$(DEPDIR)/hydra_pmi_proxy-proxy_pmi_cb.Tpo proxy/$(DEPDIR)/hydra_pmi_proxy-proxy_pmi_cb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='proxy/proxy_pmi_cb.c' object='proxy/hydra_pmi_proxy-proxy_pmi_cb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hydra_pmi_proxy_CFLAGS) $(CFLAGS) -c -o proxy/hydra_pmi_proxy-proxy_pmi_cb.o `test -f 'proxy/proxy_pmi_cb.c' || echo '$(srcdir)/'`proxy/proxy_pmi_cb.c

proxy/hydra_pmi_proxy-proxy_pmi_cb.obj: proxy/proxy_pmi_cb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hydra_pmi_proxy_CFLAGS) $(CFLAGS) -MT proxy/hydra_pmi_proxy-proxy_pmi_cb.obj -MD -MP -MF proxy/$(DEPDIR)/hydra_pmi_proxy-proxy_pmi_cb.Tpo -c -o proxy/hydra_pmi_proxy-proxy_pmi_cb.obj `if test -f 'proxy/proxy_pmi_cb.c'; then $(CYGPATH_W) 'proxy/proxy_pmi_cb.c'; else $(CYGPATH_W) '$(srcdir)/proxy/proxy_pmi_cb.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) proxy/$(DEPDIR)/hydra_pmi_proxy-proxy_pmi_cb.Tpo proxy/$(DEPDIR)/hydra_pmi_proxy-proxy_pmi_cb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='proxy/proxy_pmi_cb.c' object='proxy/hydra_pmi_proxy-proxy_pmi_cb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(hydra_pmi_proxy_CFLAGS) $(CFLAGS) -c -o proxy/hydra_pmi_proxy-proxy_pmi_cb.obj `if test -f 'proxy/proxy_pmi_cb.c'; then $(CYGPATH_W) 'proxy/proxy_pmi_cb.c'; else $(CYGPATH_W) '$(srcdir)/proxy/proxy_pmi_cb.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf common/.libs common/_libs
	-rm -rf libhydra/arg/.libs libhydra/arg/_libs
	-rm -rf libhydra/bstrap/ll/.libs libhydra/bstrap/ll/_libs
	-rm -rf libhydra/bstrap/rsh/.libs libhydra/bstrap/rsh/_libs
	-rm -rf libhydra/bstrap/sge/.libs libhydra/bstrap/sge/_libs
	-rm -rf libhydra/bstrap/slurm/.libs libhydra/bstrap/slurm/_libs
	-rm -rf libhydra/bstrap/src/.libs libhydra/bstrap/src/_libs
	-rm -rf libhydra/bstrap/ssh/.libs libhydra/bstrap/ssh/_libs
	-rm -rf libhydra/debugger/.libs libhydra/debugger/_libs
	-rm -rf libhydra/demux/.libs libhydra/demux/_libs
	-rm -rf libhydra/env/.libs libhydra/env/_libs
	-rm -rf libhydra/err/.libs libhydra/err/_libs
	-rm -rf libhydra/exec/.libs libhydra/exec/_libs
	-rm -rf libhydra/fs/.libs libhydra/fs/_libs
	-rm -rf libhydra/hostfile/.libs libhydra/hostfile/_libs
	-rm -rf libhydra/node/.libs libhydra/node/_libs
	-rm -rf libhydra/rmk/cobalt/.libs libhydra/rmk/cobalt/_libs
	-rm -rf libhydra/rmk/ll/.libs libhydra/rmk/ll/_libs
	-rm -rf libhydra/rmk/lsf/.libs libhydra/rmk/lsf/_libs
	-rm -rf libhydra/rmk/pbs/.libs libhydra/rmk/pbs/_libs
	-rm -rf libhydra/rmk/sge/.libs libhydra/rmk/sge/_libs
	-rm -rf libhydra/rmk/slurm/.libs libhydra/rmk/slurm/_libs
	-rm -rf libhydra/rmk/src/.libs libhydra/rmk/src/_libs
	-rm -rf libhydra/signal/.libs libhydra/signal/_libs
	-rm -rf libhydra/sock/.libs libhydra/sock/_libs
	-rm -rf libhydra/spawn/.libs libhydra/spawn/_libs
	-rm -rf libhydra/str/.libs libhydra/str/_libs
	-rm -rf libhydra/topo/.libs libhydra/topo/_libs
	-rm -rf libhydra/topo/hwloc/.libs libhydra/topo/hwloc/_libs
	-rm -rf libhydra/tree/.libs libhydra/tree/_libs

distclean-libtool:
	-rm -f libtool config.lt

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f common/$(DEPDIR)/$(am__dirstamp)
	-rm -f common/$(am__dirstamp)
	-rm -f libhydra/arg/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/arg/$(am__dirstamp)
	-rm -f libhydra/bstrap/ll/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/bstrap/ll/$(am__dirstamp)
	-rm -f libhydra/bstrap/rsh/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/bstrap/rsh/$(am__dirstamp)
	-rm -f libhydra/bstrap/sge/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/bstrap/sge/$(am__dirstamp)
	-rm -f libhydra/bstrap/slurm/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/bstrap/slurm/$(am__dirstamp)
	-rm -f libhydra/bstrap/src/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/bstrap/src/$(am__dirstamp)
	-rm -f libhydra/bstrap/ssh/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/bstrap/ssh/$(am__dirstamp)
	-rm -f libhydra/debugger/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/debugger/$(am__dirstamp)
	-rm -f libhydra/demux/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/demux/$(am__dirstamp)
	-rm -f libhydra/env/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/env/$(am__dirstamp)
	-rm -f libhydra/err/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/err/$(am__dirstamp)
	-rm -f libhydra/exec/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/exec/$(am__dirstamp)
	-rm -f libhydra/fs/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/fs/$(am__dirstamp)
	-rm -f libhydra/hostfile/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/hostfile/$(am__dirstamp)
	-rm -f libhydra/node/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/node/$(am__dirstamp)
	-rm -f libhydra/rmk/cobalt/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/rmk/cobalt/$(am__dirstamp)
	-rm -f libhydra/rmk/ll/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/rmk/ll/$(am__dirstamp)
	-rm -f libhydra/rmk/lsf/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/rmk/lsf/$(am__dirstamp)
	-rm -f libhydra/rmk/pbs/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/rmk/pbs/$(am__dirstamp)
	-rm -f libhydra/rmk/sge/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/rmk/sge/$(am__dirstamp)
	-rm -f libhydra/rmk/slurm/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/rmk/slurm/$(am__dirstamp)
	-rm -f libhydra/rmk/src/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/rmk/src/$(am__dirstamp)
	-rm -f libhydra/signal/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/signal/$(am__dirstamp)
	-rm -f libhydra/sock/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/sock/$(am__dirstamp)
	-rm -f libhydra/spawn/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/spawn/$(am__dirstamp)
	-rm -f libhydra/str/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/str/$(am__dirstamp)
	-rm -f libhydra/topo/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/topo/$(am__dirstamp)
	-rm -f libhydra/topo/hwloc/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/topo/hwloc/$(am__dirstamp)
	-rm -f libhydra/tree/$(DEPDIR)/$(am__dirstamp)
	-rm -f libhydra/tree/$(am__dirstamp)
	-rm -f mpiexec/$(DEPDIR)/$(am__dirstamp)
	-rm -f mpiexec/$(am__dirstamp)
	-rm -f nameserver/$(DEPDIR)/$(am__dirstamp)
	-rm -f nameserver/$(am__dirstamp)
	-rm -f proxy/$(DEPDIR)/$(am__dirstamp)
	-rm -f proxy/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf common/$(DEPDIR) libhydra/arg/$(DEPDIR) libhydra/bstrap/ll/$(DEPDIR) libhydra/bstrap/rsh/$(DEPDIR) libhydra/bstrap/sge/$(DEPDIR) libhydra/bstrap/slurm/$(DEPDIR) libhydra/bstrap/src/$(DEPDIR) libhydra/bstrap/ssh/$(DEPDIR) libhydra/debugger/$(DEPDIR) libhydra/demux/$(DEPDIR) libhydra/env/$(DEPDIR) libhydra/err/$(DEPDIR) libhydra/exec/$(DEPDIR) libhydra/fs/$(DEPDIR) libhydra/hostfile/$(DEPDIR) libhydra/node/$(DEPDIR) libhydra/rmk/cobalt/$(DEPDIR) libhydra/rmk/ll/$(DEPDIR) libhydra/rmk/lsf/$(DEPDIR) libhydra/rmk/pbs/$(DEPDIR) libhydra/rmk/sge/$(DEPDIR) libhydra/rmk/slurm/$(DEPDIR) libhydra/rmk/src/$(DEPDIR) libhydra/signal/$(DEPDIR) libhydra/sock/$(DEPDIR) libhydra/spawn/$(DEPDIR) libhydra/str/$(DEPDIR) libhydra/topo/$(DEPDIR) libhydra/topo/hwloc/$(DEPDIR) libhydra/tree/$(DEPDIR) mpiexec/$(DEPDIR) nameserver/$(DEPDIR) proxy/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf common/$(DEPDIR) libhydra/arg/$(DEPDIR) libhydra/bstrap/ll/$(DEPDIR) libhydra/bstrap/rsh/$(DEPDIR) libhydra/bstrap/sge/$(DEPDIR) libhydra/bstrap/slurm/$(DEPDIR) libhydra/bstrap/src/$(DEPDIR) libhydra/bstrap/ssh/$(DEPDIR) libhydra/debugger/$(DEPDIR) libhydra/demux/$(DEPDIR) libhydra/env/$(DEPDIR) libhydra/err/$(DEPDIR) libhydra/exec/$(DEPDIR) libhydra/fs/$(DEPDIR) libhydra/hostfile/$(DEPDIR) libhydra/node/$(DEPDIR) libhydra/rmk/cobalt/$(DEPDIR) libhydra/rmk/ll/$(DEPDIR) libhydra/rmk/lsf/$(DEPDIR) libhydra/rmk/pbs/$(DEPDIR) libhydra/rmk/sge/$(DEPDIR) libhydra/rmk/slurm/$(DEPDIR) libhydra/rmk/src/$(DEPDIR) libhydra/signal/$(DEPDIR) libhydra/sock/$(DEPDIR) libhydra/spawn/$(DEPDIR) libhydra/str/$(DEPDIR) libhydra/topo/$(DEPDIR) libhydra/topo/hwloc/$(DEPDIR) libhydra/tree/$(DEPDIR) mpiexec/$(DEPDIR) nameserver/$(DEPDIR) proxy/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-local

.MAKE: $(am__recursive_targets) install-am install-exec-am \
	install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--refresh check check-am clean clean-binPROGRAMS \
	clean-cscope clean-generic clean-libtool \
	clean-noinstLTLIBRARIES cscope cscopelist-am ctags ctags-am \
	dist dist-all dist-bzip2 dist-gzip dist-lzip dist-shar \
	dist-tarZ dist-xz dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-exec-hook install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-local

.PRECIOUS: Makefile


# Provide an alias for mpirun to support tools that assume that
# mpiexec is called mpirun
install-exec-hook:
	if [ -x ${DESTDIR}${bindir}/@MPIEXEC_HYDRA_NAME@ ] ; then \
	    cd ${DESTDIR}${bindir} && ln -f -s @MPIEXEC_HYDRA_NAME@ @MPIEXEC_NAME@ ; \
	    cd ${DESTDIR}${bindir} && ln -f -s @MPIEXEC_HYDRA_NAME@ @MPIRUN_NAME@ ; \
	fi

# A special alternate installation target when using multiple process
# managers; this is basically the install target, but without the
# install-exec-hook
install-alt: $(bin_PROGRAMS)
	@for foo in $? ; do $(MAKE) install $$foo ; done

uninstall-local:
	rm -f ${DESTDIR}${bindir}/@MPIRUN_NAME@ ${DESTDIR}${bindir}/@MPIEXEC_NAME@

.c.man-phony:
	$(doctextman_verbose)$(DOCTEXT) -man -mpath $(mandoc_path3) -ext 3 \
	    -heading HYDRA -quotefmt $(doctext_docnotes) $<
.c.html-phony:
	$(doctexthtml_verbose)$(DOCTEXT) -html -mpath $(htmldoc_path3) \
	    -heading HYDRA -quotefmt $(doctext_docnotes) $<

.txt.man1-phony:
	$(doctextman_verbose)$(DOCTEXT) -man -mpath $(mandoc_path1) -ext 1 \
	    -heading HYDRA -quotefmt $(doctext_docnotes) $<
.txt.html1-phony:
	$(doctexthtml_verbose)$(DOCTEXT) -html -mpath $(htmldoc_path1) \
	    -heading HYDRA -quotefmt $(doctext_docnotes) $<

# use mandoc-local target to force directory creation before running DOCTEXT
mandoc:
	test -d $(mandoc_path1) || $(MKDIR_P) $(mandoc_path1)
	test -d $(mandoc_path3) || $(MKDIR_P) $(mandoc_path3)
	$(MAKE) $(AM_MAKEFLAGS) mandoc-local
mandoc-local: $(doc1_src_txt:.txt=.man1-phony)

# use htmldoc-local target to force directory creation before running DOCTEXT
htmldoc:
	if test "@DOXYGEN@" != "" ; then @DOXYGEN@ hydra-doxygen.cfg ; fi
	test -d $(top_builddir)/www/www1 || $(MKDIR_P) $(top_builddir)/www/www1
	test -d $(top_builddir)/www/www3 || $(MKDIR_P) $(top_builddir)/www/www3
	$(MAKE) $(AM_MAKEFLAGS) htmldoc-local
htmldoc-local: $(doc1_src_txt:.txt=.man1-phony)

# --------------------------------------------------------------------------
.PHONY: coverage
# assumes that these sources were compiled appropriately ("-fprofile-arcs"
# and "-ftest-coverage")
coverage:
	@for file in $(gcov_sources) ; do \
	    dir=`dirname $$file` ; \
	    bname=`basename $$file` ; \
	    aux=`echo $$bname | sed -e 's,\.*$$,,'` ; \
	    echo "( $(GCOV) -b -f -o $$file $$file && mv $${bname}.gcov $$dir )" ; \
	    ( $(GCOV) -b -f -o $$file $$file && mv $${bname}.gcov $$dir ) ; \
	    rm -f *.gcov ; \
	done
# --------------------------------------------------------------------------

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

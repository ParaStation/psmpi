.TH "fi_netdir" "7" "2017\-12\-01" "Libfabric Programmer\[aq]s Manual" "\@VERSION\@"
.SH NAME
.PP
fi_netdir \- The Network Direct Fabric Provider
.SH OVERVIEW
.PP
The Network Direct provider enables applications using OFI to be run
over any verbs hardware (Infiniband, iWarp and etc).
It uses the Microsoft Network Direct SPI for network transport and
provides a translation of OFI calls to appropriate Network Direct API
calls.
The Network Direct providers allows to OFI\-based applications utilize
zero\-copy data transfers between applications, kernel\-bypass I/O
generation and one\-sided data transfer operations on Microsoft Windows
OS.
An application is able to use OFI with Network Direct provider enabled
on Windows OS to expose the capabilities of the networking devices if
the hardware vendors of the devices implemented the Network Direct
service provider interface (SPI) for their hardware.
.SH SUPPORTED FEATURES
.PP
The Network Direct provider support the following features defined for
the libfabric API:
.PP
\f[I]Endpoint types\f[] : The provider support the FI_EP_MSG endpoint
types.
.PP
\f[I]Memory registration modes\f[] : The provider implements the
\f[I]FI_MR_BASIC\f[] memory registration mode.
.PP
\f[I]Data transfer operations\f[] : The following data transfer
interfaces are supported for the following endpoint types:
\f[I]FI_MSG\f[], \f[I]FI_RMA\f[].
See DATA TRANSFER OPERATIONS below for more details.
.PP
\f[I]Modes\f[] : The Network Direct provider requires applications to
support the following modes: * FI_LOCAL_MR for all applications.
.PP
\f[I]Addressing Formats\f[] : Supported addressing formats include
FI_SOCKADDR, FI_SOCKADDR_IN, FI_SOCKADDR_IN6
.PP
\f[I]Progress\f[] : The Network Direct provider supports
FI_PROGRESS_AUTO: Asynchronous operations make forward progress
automatically.
.PP
\f[I]Operation flags\f[] : The provider supports FI_INJECT,
FI_COMPLETION, FI_TRANSMIT_COMPLETE, FI_INJECT_COMPLETE,
FI_DELIVERY_COMPLETE, FI_SELECTIVE_COMPLETION
.PP
\f[I]Completion ordering\f[] : RX/TX contexts: FI_ORDER_STRICT
.PP
\f[I]Other supported features\f[] : Multiple input/output vector (IOV)
is supported for FI_RMA read/write and FI_MSG receive/transmit
operations.
.SH LIMITATIONS
.PP
The Network Direct is an experimental provider.
The full support of the Network Direct provider will be added to 1.6
release version of libfabric.
.PP
\f[I]Memory Regions\f[] : Only FI_MR_BASIC mode is supported.
Adding regions via s/g list is supported only up to a s/g list size of
1.
No support for binding memory regions to a counter.
.PP
\f[I]Wait objects\f[] : Wait object and wait sets are not supported.
.PP
\f[I]Resource Management\f[] : Application has to make sure CQs are not
overrun as this cannot be detected by the provider.
.PP
\f[I]Unsupported Endpoint types\f[] : FI_EP_DGRAM, FI_EP_RDM
.PP
\f[I]Other unsupported features\f[] : Scalable endpoints, FABRIC_DIRECT
.PP
\f[I]Unsupported features specific to MSG endpoints\f[] : FI_SOURCE,
FI_TAGGED, FI_CLAIM, fi_ep_alias, shared TX context, operations.
.SH RUNTIME PARAMETERS
.PP
The Network Direct provider checks for the following environment
variables.
.SS Variables specific to RDM endpoints
.PP
\f[I]FI_NETDIR_INLINETHR\f[] : The size of the (default: 8 Kbyte): *
Transmitted data that can be inlined * Preposted data for the unexpected
receive queue
.PP
\f[I]FI_NETDIR_PREPOSTCNT\f[] : The number of pre\-registered buffers
between the endpoints that are not require internal ACK messages, must
be a power of 2 (default: 8).
.PP
\f[I]FI_NETDIR_PREPOSTBUFCNT\f[] : The number of preposted arrays of
buffers, must be a power of 2 (default: 1).
.SS Environment variables notes
.PP
The fi_info utility would give the up\-to\-date information on
environment variables: fi_info \-p netdir \-e
.SH SEE ALSO
.PP
\f[C]fabric\f[](7), \f[C]fi_open_ops\f[](3), \f[C]fi_provider\f[](7),
\f[C]fi_getinfo\f[](3) \f[C]fi_atomic\f[](3)
.SH AUTHORS
OpenFabrics.

.TH "fi_mlx" "7" "2017\-12\-01" "Libfabric Programmer\[aq]s Manual" "\@VERSION\@"
.SH NAME
.PP
fi_mlx \- The MLX Fabric Provider
.SH OVERVIEW
.PP
The \f[I]mlx\f[] provider runs over the UCX library that is currently
supported by the Mellanox infiniband fabrics.
The \f[I]mlx\f[] provider makes use of UCX tag matching API in order to
implement a limited set of the libfabric data transfer APIs, namely,
tagged message queue.
.PP
Supported UCP API version: 1.0
.SH LIMITATIONS
.PP
The \f[I]mlx\f[] provider doesn\[aq]t support all the features defined
in the libfabric API.
Here are some of the limitations:
.PP
Endpoint types : Only supported type: \f[I]FI_RDM\f[]
.PP
Endpoint capabilities : Endpoints can support the only data transfer
capability \f[I]FI_TAGGED\f[].
.PP
Modes : \f[I]FI_CONTEXT\f[] is required.
That means, all the requests that generate completions must have a valid
pointer to type \f[I]struct fi_context\f[] passed as the operation
context.
.PP
Threading : The supported mode is FI_THREAD_DOMAIN, i.e.
the \f[I]mlx\f[] provider is not thread safe.
.PP
Unsupported features : These features are unsupported: connection
management, event queue, scalable endpoint, passive endpoint, shared
receive context, rma, atomics.
.SH RUNTIME PARAMETERS
.SH SEE ALSO
.PP
\f[C]fabric\f[](7), \f[C]fi_provider\f[](7),
.SH AUTHORS
OpenFabrics.

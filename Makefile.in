###################################################### -*- Makefile -*- #####
#                  ParaStation
#        Copyright (c) 2002-2004 ParTec AG, Karlsruhe
#        Copyright (c) 2005-2007 Cluster Competence Center GmbH, Munich
#############################################################################
#
# $Id$
#
# @author
#         Jens Hauke <hauke@par-tec.de>
#############################################################################

SRCDIR := $(shell cd @srcdir@;pwd)
TOP_BUILDDIR:=@TOP_BUILDDIR@
CONFSET:=@CONFSET@
CUDA_SUPPORT:=@CUDA_SUPPORT@
export TOP_SRCDIR = $(SRCDIR)
export CONFIGARGS:=@CONFIGARGS@
exec_prefix=@exec_prefix@
prefix=@prefix@
libdir=@libdir@
MODULEFILE=@MODULEFILE@
ENABLE_HYDRA=@ENABLE_HYDRA@
MPICH_VERSION=@MPICH_VERSION@
MPICH_RELEASE_DATE=@MPICH_RELEASE_DATE@
EXTRA_VERSION_INFO="@EXTRA_VERSION_INFO@"
all:

SUBDIRS += dist

ifneq ($(CONFSET),none)
SUBDIRS += mpich2
all: mpich2_all

ifeq ($(CUDA_SUPPORT),true)
CUDA_TESTS = --enable-cuda
endif

ifeq ($(ENABLE_HYDRA),false)
MPIEXEC=/opt/parastation/bin/mpiexec
else
MPIEXEC=$(DESTDIR)$(prefix)/bin/mpiexec.hydra
endif

test testing:
	export MPIEXEC=$(MPIEXEC); \
	export PSI_OVERBOOK=1; \
	export PSI_LOG_SILENT=1; \
	export PSP_SCHED_YIELD=1; \
	export MPIEXEC_UNIVERSE_SIZE=100; \
	export _LOGNAME=$(SRCDIR)/doc/test-$$($(SRCDIR)/scripts/vcversion -r $(SRCDIR))_$$(date +%F_%T); \
	( cd mpich2/test/mpi ; $(SRCDIR)/mpich2/test/mpi/configure --with-mpi=$(prefix) $(CUDA_TESTS)); \
	( hostname; rpm -qi pscom; rpm -qi psmgmt; $(SRCDIR)/scripts/vcversion -r $(SRCDIR); \
	  echo $(MPIEXEC); \
	  $(MAKE) -C mpich2 testing; \
	  cp mpich2/test/mpi/summary.xml $${_LOGNAME}.xml; \
	  cp mpich2/test/mpi/summary.tap $${_LOGNAME}.tap; \
	  $(SRCDIR)/scripts/test-summary.sh $${_LOGNAME}.xml; \
	) 2>&1 | tee -a $${_LOGNAME}.log; \
	echo -e "\nSummary written to $${_LOGNAME}*"
else

all: no_all

test testing: no_all

no_all:
	@echo "Please configure with '--with-confset=xyz' or use"
	@echo "'make rpm', 'make srpm' or 'make tar'"
endif

########################################################
install: install_mpich2 modulefile install_version $(DESTDIR)$(prefix)/ChangeLog mpicc-conf

HYDRA_BIN += mpiexec mpirun
HYDRA_BIN += mpiexec.hydra hydra_pmi_proxy hydra_persist hydra_nameserver
HYDRA_FILES += $(HYDRA_BIN:%=bin/%) $(HYDRA_BIN:%=bin/%.py) $(HYDRA_BIN:%=bin/%.pyc) $(HYDRA_BIN:%=bin/%.pyo)
HYDRA_FILES += share/man/man1/mpiexec.1 share/doc/www1/mpiexec.html
LA_FILES += lib*.la


install_mpich2:
	$(MAKE) ACLOCAL=/bin/true AUTOCONF=/bin/true AUTOHEADER=/bin/true AUTOMAKE=/bin/true -C mpich2 install 
	$(RM) $(DESTDIR)$(prefix)/bin/parkill
# Remove libtool files	
	$(RM) $(LA_FILES:%=$(DESTDIR)$(libdir)/%)
ifeq ($(ENABLE_HYDRA),false)
# remove installed hydra files
	$(RM) $(HYDRA_FILES:%=$(DESTDIR)$(prefix)/%)
endif
ifneq ($(fixpath),)
#  sed optinon -i is not available in sed version 3.x !!!
	find $(DESTDIR)$(prefix) -type f -exec grep -q $(prefix) {} \; -print | while read i; do \
	    if (file -b $$i | grep text >/dev/null) ; then \
		echo Patch $$i; \
		sed "s@$(prefix)@$(fixpath)@g" $$i > __tmp__; \
		chmod --reference=$$i __tmp__; \
		mv __tmp__ $$i; \
	    fi \
	done
endif

mpicc-conf:
	scripts/generate_mpicc-conf.sh

# Get Version
VER:=$(shell cd $(TOP_SRCDIR) && scripts/vcversion)

.PHONY install_version: $(DESTDIR)$(prefix)/VERSION.psmpi

$(DESTDIR)$(prefix)/VERSION.psmpi:
	mkdir -p $(dir $@)
	echo "ParaStation $(VER) ($(shell date))" > $@
	echo " config args: $(CONFIGARGS)" >> $@
	echo " mpich version: $(MPICH_VERSION) ($(MPICH_RELEASE_DATE))" >> $@
	echo " build host: $(shell hostname -s)" >> $@
	test -z $(EXTRA_VERSION_INFO) || echo $(EXTRA_VERSION_INFO) >> $@
ifneq ($(fixpath),)
#  sed optinon -i is not available in sed version 3.x !!!
	@echo Patch $@;
	sed "s@$(prefix)@$(fixpath)@g" $@ > __tmp__version
	mv __tmp__version $@
endif

$(DESTDIR)$(prefix)/ChangeLog: $(SRCDIR)/ChangeLog
	cp -a "$<" "$@"

.PHONY modulefile: $(DESTDIR)$(MODULEFILE)

$(DESTDIR)$(MODULEFILE):
ifneq ($(fixpath),)
	mkdir -p $(dir $@) && scripts/generate_modulefile.sh | sed "s@$(prefix)@$(fixpath)@g" > $@ || :
else
	mkdir -p $(dir $@) && scripts/generate_modulefile.sh > $@ || :
endif
####################################################

.PHONY: tar rpm srpm tag version
tar rpm srpm tag version:
	mkdir -p dist
	$(MAKE) -C dist -f $(SRCDIR)/dist/Makefile $@

%_clean %_distclean %_all:
	@echo "------------ $* ${@:$*_%=%} --------"
	$(MAKE) ACLOCAL=/bin/true AUTOCONF=/bin/true AUTOHEADER=/bin/true AUTOMAKE=/bin/true -C $* ${@:$*_%=%} || :

clean:		$(SUBDIRS:=_clean)

distclean:	$(SUBDIRS:=_distclean)


Makefile: $(SRCDIR)/Makefile.in
	cd $(TOP_BUILDDIR); ./config.status

From cfab4a8278c827cabfb07d8784e552f5306c128a Mon Sep 17 00:00:00 2001
From: Carsten Clauss <clauss@par-tec.com>
Date: Tue, 14 Jan 2020 18:03:09 +0100
Subject: [PATCH] Fix: According to MPICH, its 'recursive_doubling' algorithm
 for MPI_Allgather can currently only handle a comm_size with a power-of-2.
 Therefore, fall back to 'ring' for the time being if this is not met.

---
 .../src/mpi/coll/allgather/allgather_intra_recursive_doubling.c   | 8 ++++++--
 .../src/mpi/coll/iallgather/iallgather_intra_recursive_doubling.c | 8 ++++++--
 2 files changed, 12 insertions(+), 4 deletions(-)

diff --git a/mpich2/src/mpi/coll/allgather/allgather_intra_recursive_doubling.c b/mpich2/src/mpi/coll/allgather/allgather_intra_recursive_doubling.c
index 33487b4dd..b409a15a7 100644
--- a/mpich2/src/mpi/coll/allgather/allgather_intra_recursive_doubling.c
+++ b/mpich2/src/mpi/coll/allgather/allgather_intra_recursive_doubling.c
@@ -48,9 +48,13 @@ int MPIR_Allgather_intra_recursive_doubling(const void *sendbuf,
     comm_size = comm_ptr->local_size;
     rank = comm_ptr->rank;
 
+    if(comm_size & (comm_size - 1)) {
+        /* Currently this algorithm can only handle power-of-2 comm_size. */
+        return MPIR_Allgather_intra_ring(sendbuf, sendcount, sendtype, recvbuf, recvcount, recvtype,
+                                         comm_ptr, errflag);
+    }
 #ifdef HAVE_ERROR_CHECKING
-    /* Currently this algorithm can only handle power-of-2 comm_size.
-     * Non power-of-2 comm_size is still experimental */
+    /* Non power-of-2 comm_size is still experimental */
     MPIR_Assert(!(comm_size & (comm_size - 1)));
 #endif /* HAVE_ERROR_CHECKING */
 
diff --git a/mpich2/src/mpi/coll/iallgather/iallgather_intra_recursive_doubling.c b/mpich2/src/mpi/coll/iallgather/iallgather_intra_recursive_doubling.c
index b5d79a133..1c0c6eef4 100644
--- a/mpich2/src/mpi/coll/iallgather/iallgather_intra_recursive_doubling.c
+++ b/mpich2/src/mpi/coll/iallgather/iallgather_intra_recursive_doubling.c
@@ -65,9 +65,13 @@ int MPIR_Iallgather_sched_intra_recursive_doubling(const void *sendbuf, int send
     comm_size = comm_ptr->local_size;
     rank = comm_ptr->rank;
 
+    if(comm_size & (comm_size - 1)) {
+        /* Currently this algorithm can only handle power-of-2 comm_size. */
+        return MPIR_Iallgather_sched_intra_ring(sendbuf, sendcount, sendtype, recvbuf,
+                                                recvcount, recvtype, comm_ptr, s);
+    }
 #ifdef HAVE_ERROR_CHECKING
-    /* Currently this algorithm can only handle power-of-2 comm_size.
-     * Non power-of-2 comm_size is still experimental */
+    /* Non power-of-2 comm_size is still experimental */
     MPIR_Assert(!(comm_size & (comm_size - 1)));
 #endif /* HAVE_ERROR_CHECKING */
 
